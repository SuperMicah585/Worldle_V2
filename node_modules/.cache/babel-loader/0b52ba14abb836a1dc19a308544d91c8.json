{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/mphelps/react-app/TasQDashboard-main/src/components/grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = () => {\n  _s();\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const onGridReady = params => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n    addDropZones(params);\n    addCheckboxListener(params);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), \" Enable suppressMoveWhenRowDragging\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-containers\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"myGrid\",\n            style: {\n              height: '100%',\n              width: '100%'\n            },\n            className: \"ag-theme-alpine\",\n            children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n              defaultColDef: {\n                sortable: true,\n                filter: true,\n                resizable: true,\n                flex: 1\n              },\n              rowClassRules: {\n                'red-row': 'data.color == \"Red\"',\n                'green-row': 'data.color == \"Green\"',\n                'blue-row': 'data.color == \"Blue\"'\n              },\n              rowData: createRowData(),\n              rowDragManaged: true,\n              animateRows: true,\n              onGridReady: onGridReady,\n              children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n                field: \"id\",\n                rowDrag: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n                field: \"color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n                field: \"value1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n                field: \"value2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"eDropTarget\",\n            className: \"drop-target\",\n            children: \"==> Drop to here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tile-container\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Grid, \"m7jW4tvR+j2TZAbZBOJL+Tq0WBw=\");\n\n_c = Grid;\nvar rowIdSequence = 100;\n\nfunction addCheckboxListener(params) {\n  var checkbox = document.querySelector('input[type=checkbox]');\n  checkbox.addEventListener('change', function () {\n    params.api.setSuppressMoveWhenRowDragging(checkbox.checked);\n  });\n}\n\nfunction createRowData() {\n  var data = [];\n  ['Red', 'Green', 'Blue', 'Red', 'Green', 'Blue', 'Red', 'Green', 'Blue'].forEach(function (color) {\n    var newDataItem = {\n      id: rowIdSequence++,\n      color: color,\n      value1: Math.floor(Math.random() * 100),\n      value2: Math.floor(Math.random() * 100)\n    };\n    data.push(newDataItem);\n  });\n  return data;\n}\n\nfunction createTile(data) {\n  var el = document.createElement('div');\n  el.classList.add('tile');\n  el.classList.add(data.color.toLowerCase());\n  el.innerHTML = '<div class=\"id\">' + data.id + '</div>' + '<div class=\"value\">' + data.value1 + '</div>' + '<div class=\"value\">' + data.value2 + '</div>';\n  return el;\n}\n\nfunction addDropZones(params) {\n  var tileContainer = document.querySelector('.tile-container'),\n      dropZone = {\n    getContainer: function () {\n      return tileContainer;\n    },\n    onDragStop: function (params) {\n      var tile = createTile(params.node.data);\n      tileContainer.appendChild(tile);\n    }\n  };\n  params.api.addRowDropZone(dropZone);\n}\n\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/mphelps/react-app/TasQDashboard-main/src/components/grid/Grid.jsx"],"names":["React","useState","render","AgGridReact","AgGridColumn","Grid","gridApi","setGridApi","gridColumnApi","setGridColumnApi","onGridReady","params","api","columnApi","addDropZones","addCheckboxListener","width","height","sortable","filter","resizable","flex","createRowData","rowIdSequence","checkbox","document","querySelector","addEventListener","setSuppressMoveWhenRowDragging","checked","data","forEach","color","newDataItem","id","value1","Math","floor","random","value2","push","createTile","el","createElement","classList","add","toLowerCase","innerHTML","tileContainer","dropZone","getContainer","onDragStop","tile","node","appendChild","addRowDropZone"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nconst Grid = () => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n\n    addDropZones(params);\n    addCheckboxListener(params);\n  };\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <div className=\"example-wrapper\">\n        <div className=\"toolbar\">\n          <label>\n            <input type=\"checkbox\" /> Enable suppressMoveWhenRowDragging\n          </label>\n        </div>\n        <div className=\"drop-containers\">\n          <div className=\"grid-wrapper\">\n            <div\n              id=\"myGrid\"\n              style={{\n                height: '100%',\n                width: '100%',\n              }}\n              className=\"ag-theme-alpine\"\n            >\n              <AgGridReact\n                defaultColDef={{\n                  sortable: true,\n                  filter: true,\n                  resizable: true,\n                  flex: 1,\n                }}\n                rowClassRules={{\n                  'red-row': 'data.color == \"Red\"',\n                  'green-row': 'data.color == \"Green\"',\n                  'blue-row': 'data.color == \"Blue\"',\n                }}\n                rowData={createRowData()}\n                rowDragManaged={true}\n                animateRows={true}\n                onGridReady={onGridReady}\n              >\n                <AgGridColumn field=\"id\" rowDrag={true} />\n                <AgGridColumn field=\"color\" />\n                <AgGridColumn field=\"value1\" />\n                <AgGridColumn field=\"value2\" />\n              </AgGridReact>\n            </div>\n          </div>\n          <div className=\"drop-col\">\n            <span id=\"eDropTarget\" className=\"drop-target\">\n              ==&gt; Drop to here\n            </span>\n            <div className=\"tile-container\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nvar rowIdSequence = 100;\nfunction addCheckboxListener(params) {\n  var checkbox = document.querySelector('input[type=checkbox]');\n  checkbox.addEventListener('change', function () {\n    params.api.setSuppressMoveWhenRowDragging(checkbox.checked);\n  });\n}\nfunction createRowData() {\n  var data = [];\n  [\n    'Red',\n    'Green',\n    'Blue',\n    'Red',\n    'Green',\n    'Blue',\n    'Red',\n    'Green',\n    'Blue',\n  ].forEach(function (color) {\n    var newDataItem = {\n      id: rowIdSequence++,\n      color: color,\n      value1: Math.floor(Math.random() * 100),\n      value2: Math.floor(Math.random() * 100),\n    };\n    data.push(newDataItem);\n  });\n  return data;\n}\nfunction createTile(data) {\n  var el = document.createElement('div');\n  el.classList.add('tile');\n  el.classList.add(data.color.toLowerCase());\n  el.innerHTML =\n    '<div class=\"id\">' +\n    data.id +\n    '</div>' +\n    '<div class=\"value\">' +\n    data.value1 +\n    '</div>' +\n    '<div class=\"value\">' +\n    data.value2 +\n    '</div>';\n  return el;\n}\nfunction addDropZones(params) {\n  var tileContainer = document.querySelector('.tile-container'),\n    dropZone = {\n      getContainer: function () {\n        return tileContainer;\n      },\n      onDragStop: function (params) {\n        var tile = createTile(params.node.data);\n        tileContainer.appendChild(tile);\n      },\n    };\n  params.api.addRowDropZone(dropZone);\n}\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}