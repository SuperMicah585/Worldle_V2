{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport { Autowired, Bean, Optional, PostConstruct } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Events } from \"./events\";\nimport { ManagedFocusFeature } from \"./widgets/managedFocusFeature\";\nimport { getTabIndex } from './utils/browser';\nimport { findIndex, last } from './utils/array';\nimport { makeNull } from './utils/generic';\nimport { Constants } from \"./constants/constants\";\nimport { CellCtrl } from \"./rendering/cell/cellCtrl\";\n\nvar FocusService = function (_super) {\n  __extends(FocusService, _super);\n\n  function FocusService() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FocusService_1 = FocusService;\n  /**\n   * Adds a gridCore to the list of the gridCores monitoring Keyboard Mode\n   * in a specific HTMLDocument.\n   *\n   * @param doc {Document} - The Document containing the gridCore.\n   * @param gridCore {GridComp} - The GridCore to be monitored.\n   */\n\n  FocusService.addKeyboardModeEvents = function (doc, controller) {\n    var docControllers = FocusService_1.instancesMonitored.get(doc);\n\n    if (docControllers && docControllers.length > 0) {\n      if (docControllers.indexOf(controller) === -1) {\n        docControllers.push(controller);\n      }\n    } else {\n      FocusService_1.instancesMonitored.set(doc, [controller]);\n      doc.addEventListener('keydown', FocusService_1.toggleKeyboardMode);\n      doc.addEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n    }\n  };\n  /**\n   * Removes a gridCore from the list of the gridCores monitoring Keyboard Mode\n   * in a specific HTMLDocument.\n   *\n   * @param doc {Document} - The Document containing the gridCore.\n   * @param gridCore {GridComp} - The GridCore to be removed.\n   */\n\n\n  FocusService.removeKeyboardModeEvents = function (doc, controller) {\n    var docControllers = FocusService_1.instancesMonitored.get(doc);\n    var newControllers = [];\n\n    if (docControllers && docControllers.length) {\n      newControllers = __spreadArrays(docControllers).filter(function (currentGridCore) {\n        return currentGridCore !== controller;\n      });\n      FocusService_1.instancesMonitored.set(doc, newControllers);\n    }\n\n    if (newControllers.length === 0) {\n      doc.removeEventListener('keydown', FocusService_1.toggleKeyboardMode);\n      doc.removeEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n    }\n  };\n  /**\n   * This method will be called by `keydown` and `mousedown` events on all Documents monitoring\n   * KeyboardMode. It will then fire a KEYBOARD_FOCUS, MOUSE_FOCUS on each gridCore present in\n   * the Document allowing each gridCore to maintain a state for KeyboardMode.\n   *\n   * @param event {KeyboardEvent | MouseEvent | TouchEvent} - The event triggered.\n   */\n\n\n  FocusService.toggleKeyboardMode = function (event) {\n    var isKeyboardActive = FocusService_1.keyboardModeActive;\n    var isKeyboardEvent = event.type === 'keydown';\n\n    if (isKeyboardEvent) {\n      // the following keys should not toggle keyboard mode.\n      if (event.ctrlKey || event.metaKey || event.altKey) {\n        return;\n      }\n    }\n\n    if (isKeyboardActive && isKeyboardEvent || !isKeyboardActive && !isKeyboardEvent) {\n      return;\n    }\n\n    FocusService_1.keyboardModeActive = isKeyboardEvent;\n    var doc = event.target.ownerDocument;\n\n    if (!doc) {\n      return;\n    }\n\n    var controllersForDoc = FocusService_1.instancesMonitored.get(doc);\n\n    if (controllersForDoc) {\n      controllersForDoc.forEach(function (controller) {\n        controller.dispatchEvent({\n          type: isKeyboardEvent ? Events.EVENT_KEYBOARD_FOCUS : Events.EVENT_MOUSE_FOCUS\n        });\n      });\n    }\n  };\n\n  FocusService.prototype.init = function () {\n    var _this = this;\n\n    var clearFocusedCellListener = this.clearFocusedCell.bind(this);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this));\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n    this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n    this.ctrlsService.whenReady(function (p) {\n      _this.gridCtrl = p.gridCtrl;\n\n      var doc = _this.gridOptionsWrapper.getDocument();\n\n      FocusService_1.addKeyboardModeEvents(doc, _this.gridCtrl);\n\n      _this.addDestroyFunc(function () {\n        return _this.unregisterGridCompController(_this.gridCtrl);\n      });\n    });\n  };\n\n  FocusService.prototype.unregisterGridCompController = function (gridCompController) {\n    var doc = this.gridOptionsWrapper.getDocument();\n    FocusService_1.removeKeyboardModeEvents(doc, gridCompController);\n  };\n\n  FocusService.prototype.onColumnEverythingChanged = function () {\n    // if the columns change, check and see if this column still exists. if it does, then\n    // we can keep the focused cell. if it doesn't, then we need to drop the focused cell.\n    if (!this.focusedCellPosition) {\n      return;\n    }\n\n    var col = this.focusedCellPosition.column;\n    var colFromColumnModel = this.columnModel.getGridColumn(col.getId());\n\n    if (col !== colFromColumnModel) {\n      this.clearFocusedCell();\n    }\n  };\n\n  FocusService.prototype.isKeyboardMode = function () {\n    return FocusService_1.keyboardModeActive;\n  }; // we check if the browser is focusing something, and if it is, and\n  // it's the cell we think is focused, then return the cell. so this\n  // methods returns the cell if a) we think it has focus and b) the\n  // browser thinks it has focus. this then returns nothing if we\n  // first focus a cell, then second click outside the grid, as then the\n  // grid cell will still be focused as far as the grid is concerned,\n  // however the browser focus will have moved somewhere else.\n\n\n  FocusService.prototype.getFocusCellToUseAfterRefresh = function () {\n    if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition) {\n      return null;\n    } // we check that the browser is actually focusing on the grid, if it is not, then\n    // we have nothing to worry about\n\n\n    if (!this.getGridCellForDomElement(document.activeElement)) {\n      return null;\n    }\n\n    return this.focusedCellPosition;\n  };\n\n  FocusService.prototype.getGridCellForDomElement = function (eBrowserCell) {\n    var ePointer = eBrowserCell;\n\n    while (ePointer) {\n      var cellCtrl = this.gridOptionsWrapper.getDomData(ePointer, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n\n      if (cellCtrl) {\n        return cellCtrl.getCellPosition();\n      }\n\n      ePointer = ePointer.parentNode;\n    }\n\n    return null;\n  };\n\n  FocusService.prototype.clearFocusedCell = function () {\n    this.focusedCellPosition = null;\n    this.onCellFocused(false);\n  };\n\n  FocusService.prototype.getFocusedCell = function () {\n    return this.focusedCellPosition;\n  };\n\n  FocusService.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n    if (forceBrowserFocus === void 0) {\n      forceBrowserFocus = false;\n    }\n\n    var gridColumn = this.columnModel.getGridColumn(colKey); // if column doesn't exist, then blank the focused cell and return. this can happen when user sets new columns,\n    // and the focused cell is in a column that no longer exists. after columns change, the grid refreshes and tries\n    // to re-focus the focused cell.\n\n    if (!gridColumn) {\n      this.focusedCellPosition = null;\n      return;\n    }\n\n    this.focusedCellPosition = gridColumn ? {\n      rowIndex: rowIndex,\n      rowPinned: makeNull(floating),\n      column: gridColumn\n    } : null;\n    this.onCellFocused(forceBrowserFocus);\n  };\n\n  FocusService.prototype.isCellFocused = function (cellPosition) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n\n    return this.focusedCellPosition.column === cellPosition.column && this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n  };\n\n  FocusService.prototype.isRowNodeFocused = function (rowNode) {\n    return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n  };\n\n  FocusService.prototype.isHeaderWrapperFocused = function (headerWrapper) {\n    if (this.focusedHeaderPosition == null) {\n      return false;\n    }\n\n    var column = headerWrapper.getColumn();\n    var headerRowIndex = headerWrapper.getParentComponent().getRowIndex();\n    var pinned = headerWrapper.getPinned();\n    var _a = this.focusedHeaderPosition,\n        focusedColumn = _a.column,\n        focusedHeaderRowIndex = _a.headerRowIndex;\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\n  };\n\n  FocusService.prototype.clearFocusedHeader = function () {\n    this.focusedHeaderPosition = null;\n  };\n\n  FocusService.prototype.getFocusedHeader = function () {\n    return this.focusedHeaderPosition;\n  };\n\n  FocusService.prototype.setFocusedHeader = function (headerRowIndex, column) {\n    this.focusedHeaderPosition = {\n      headerRowIndex: headerRowIndex,\n      column: column\n    };\n  };\n\n  FocusService.prototype.focusHeaderPosition = function (headerPosition, direction, fromTab, allowUserOverride, event) {\n    if (direction === void 0) {\n      direction = null;\n    }\n\n    if (fromTab === void 0) {\n      fromTab = false;\n    }\n\n    if (allowUserOverride === void 0) {\n      allowUserOverride = false;\n    }\n\n    if (allowUserOverride) {\n      var gridOptionsWrapper = this.gridOptionsWrapper;\n      var currentPosition = this.getFocusedHeader();\n      var headerRowCount = this.headerNavigationService.getHeaderRowCount();\n\n      if (fromTab) {\n        var userFunc = gridOptionsWrapper.getTabToNextHeaderFunc();\n\n        if (userFunc) {\n          var params = {\n            backwards: direction === 'Before',\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount: headerRowCount\n          };\n          headerPosition = userFunc(params);\n        }\n      } else {\n        var userFunc = gridOptionsWrapper.getNavigateToNextHeaderFunc();\n\n        if (userFunc && event) {\n          var params = {\n            key: event.key,\n            previousHeaderPosition: currentPosition,\n            nextHeaderPosition: headerPosition,\n            headerRowCount: headerRowCount,\n            event: event\n          };\n          headerPosition = userFunc(params);\n        }\n      }\n    }\n\n    if (!headerPosition) {\n      return false;\n    }\n\n    if (headerPosition.headerRowIndex === -1) {\n      return this.focusGridView(headerPosition.column);\n    }\n\n    this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n    var childContainer = this.headerNavigationService.getHeaderContainer(headerPosition.column.getPinned());\n    var rowComps = childContainer.getRowComps();\n    var nextRowComp = rowComps[headerPosition.headerRowIndex];\n    var headerComps = nextRowComp.getHeaderComps();\n    var nextHeader = headerComps[headerPosition.column.getUniqueId()];\n\n    if (nextHeader) {\n      // this will automatically call the setFocusedHeader method above\n      nextHeader.getFocusableElement().focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  FocusService.prototype.isAnyCellFocused = function () {\n    return !!this.focusedCellPosition;\n  };\n\n  FocusService.prototype.isRowFocused = function (rowIndex, floating) {\n    if (this.focusedCellPosition == null) {\n      return false;\n    }\n\n    return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === makeNull(floating);\n  };\n\n  FocusService.prototype.findFocusableElements = function (rootNode, exclude, onlyUnmanaged) {\n    if (onlyUnmanaged === void 0) {\n      onlyUnmanaged = false;\n    }\n\n    var focusableString = Constants.FOCUSABLE_SELECTOR;\n    var excludeString = Constants.FOCUSABLE_EXCLUDE;\n\n    if (exclude) {\n      excludeString += ', ' + exclude;\n    }\n\n    if (onlyUnmanaged) {\n      excludeString += ', [tabindex=\"-1\"]';\n    }\n\n    var nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString));\n    var excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n\n    if (!excludeNodes.length) {\n      return nodes;\n    }\n\n    var diff = function (a, b) {\n      return a.filter(function (element) {\n        return b.indexOf(element) === -1;\n      });\n    };\n\n    return diff(nodes, excludeNodes);\n  };\n\n  FocusService.prototype.focusInto = function (rootNode, up, onlyUnmanaged) {\n    if (up === void 0) {\n      up = false;\n    }\n\n    if (onlyUnmanaged === void 0) {\n      onlyUnmanaged = false;\n    }\n\n    var focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n    var toFocus = up ? last(focusableElements) : focusableElements[0];\n\n    if (toFocus) {\n      toFocus.focus();\n      return true;\n    }\n\n    return false;\n  };\n\n  FocusService.prototype.findNextFocusableElement = function (rootNode, onlyManaged, backwards) {\n    var focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n    var currentIndex;\n\n    if (onlyManaged) {\n      currentIndex = findIndex(focusable, function (el) {\n        return el.contains(document.activeElement);\n      });\n    } else {\n      currentIndex = focusable.indexOf(document.activeElement);\n    }\n\n    var nextIndex = currentIndex + (backwards ? -1 : 1);\n\n    if (nextIndex < 0 || nextIndex >= focusable.length) {\n      return null;\n    }\n\n    return focusable[nextIndex];\n  };\n\n  FocusService.prototype.isFocusUnderManagedComponent = function (rootNode) {\n    var managedContainers = rootNode.querySelectorAll(\".\" + ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n\n    if (!managedContainers.length) {\n      return false;\n    }\n\n    for (var i = 0; i < managedContainers.length; i++) {\n      if (managedContainers[i].contains(document.activeElement)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  FocusService.prototype.findTabbableParent = function (node, limit) {\n    if (limit === void 0) {\n      limit = 5;\n    }\n\n    var counter = 0;\n\n    while (node && getTabIndex(node) === null && ++counter <= limit) {\n      node = node.parentElement;\n    }\n\n    if (getTabIndex(node) === null) {\n      return null;\n    }\n\n    return node;\n  };\n\n  FocusService.prototype.onCellFocused = function (forceBrowserFocus) {\n    var event = {\n      type: Events.EVENT_CELL_FOCUSED,\n      forceBrowserFocus: forceBrowserFocus,\n      rowIndex: null,\n      column: null,\n      floating: null,\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      rowPinned: null,\n      isFullWidthCell: false\n    };\n\n    if (this.focusedCellPosition) {\n      var rowIndex = event.rowIndex = this.focusedCellPosition.rowIndex;\n      var rowPinned = event.rowPinned = this.focusedCellPosition.rowPinned;\n      event.column = this.focusedCellPosition.column;\n      var rowCtrl = this.rowRenderer.getRowByPosition({\n        rowIndex: rowIndex,\n        rowPinned: rowPinned\n      });\n\n      if (rowCtrl) {\n        event.isFullWidthCell = rowCtrl.isFullWidth();\n      }\n    }\n\n    this.eventService.dispatchEvent(event);\n  };\n\n  FocusService.prototype.focusGridView = function (column, backwards) {\n    var nextRow = backwards ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();\n\n    if (!nextRow) {\n      return false;\n    }\n\n    var rowIndex = nextRow.rowIndex,\n        rowPinned = nextRow.rowPinned;\n    var focusedHeader = this.getFocusedHeader();\n\n    if (!column && focusedHeader) {\n      column = focusedHeader.column;\n    }\n\n    if (rowIndex == null || !column) {\n      return false;\n    }\n\n    this.navigationService.ensureCellVisible({\n      rowIndex: rowIndex,\n      column: column,\n      rowPinned: rowPinned\n    });\n    this.setFocusedCell(rowIndex, column, makeNull(rowPinned), true);\n\n    if (this.rangeService) {\n      var cellPosition = {\n        rowIndex: rowIndex,\n        rowPinned: rowPinned,\n        column: column\n      };\n      this.rangeService.setRangeToCell(cellPosition);\n    }\n\n    return true;\n  };\n\n  FocusService.prototype.focusNextGridCoreContainer = function (backwards) {\n    if (this.gridCtrl.focusNextInnerContainer(backwards)) {\n      return true;\n    }\n\n    if (!backwards) {\n      this.gridCtrl.forceFocusOutOfContainer();\n    }\n\n    return false;\n  };\n\n  var FocusService_1;\n  FocusService.AG_KEYBOARD_FOCUS = 'ag-keyboard-focus';\n  FocusService.keyboardModeActive = false;\n  FocusService.instancesMonitored = new Map();\n\n  __decorate([Autowired('columnModel')], FocusService.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('headerNavigationService')], FocusService.prototype, \"headerNavigationService\", void 0);\n\n  __decorate([Autowired('columnApi')], FocusService.prototype, \"columnApi\", void 0);\n\n  __decorate([Autowired('gridApi')], FocusService.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('rowRenderer')], FocusService.prototype, \"rowRenderer\", void 0);\n\n  __decorate([Autowired('rowPositionUtils')], FocusService.prototype, \"rowPositionUtils\", void 0);\n\n  __decorate([Optional('rangeService')], FocusService.prototype, \"rangeService\", void 0);\n\n  __decorate([Autowired('navigationService')], FocusService.prototype, \"navigationService\", void 0);\n\n  __decorate([Autowired('ctrlsService')], FocusService.prototype, \"ctrlsService\", void 0);\n\n  __decorate([PostConstruct], FocusService.prototype, \"init\", null);\n\n  FocusService = FocusService_1 = __decorate([Bean('focusService')], FocusService);\n  return FocusService;\n}(BeanStub);\n\nexport { FocusService };","map":{"version":3,"sources":["/Users/mphelps/react-app/TasQDashboard-main/node_modules/@ag-grid-community/core/dist/es6/focusService.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__spreadArrays","s","il","k","a","j","jl","Autowired","Bean","Optional","PostConstruct","BeanStub","Events","ManagedFocusFeature","getTabIndex","findIndex","last","makeNull","Constants","CellCtrl","FocusService","_super","apply","FocusService_1","addKeyboardModeEvents","doc","controller","docControllers","instancesMonitored","get","indexOf","push","set","addEventListener","toggleKeyboardMode","removeKeyboardModeEvents","newControllers","filter","currentGridCore","removeEventListener","event","isKeyboardActive","keyboardModeActive","isKeyboardEvent","type","ctrlKey","metaKey","altKey","ownerDocument","controllersForDoc","forEach","dispatchEvent","EVENT_KEYBOARD_FOCUS","EVENT_MOUSE_FOCUS","init","_this","clearFocusedCellListener","clearFocusedCell","bind","addManagedListener","eventService","EVENT_COLUMN_PIVOT_MODE_CHANGED","EVENT_NEW_COLUMNS_LOADED","onColumnEverythingChanged","EVENT_COLUMN_GROUP_OPENED","EVENT_COLUMN_ROW_GROUP_CHANGED","ctrlsService","whenReady","gridCtrl","gridOptionsWrapper","getDocument","addDestroyFunc","unregisterGridCompController","gridCompController","focusedCellPosition","col","column","colFromColumnModel","columnModel","getGridColumn","getId","isKeyboardMode","getFocusCellToUseAfterRefresh","isSuppressFocusAfterRefresh","getGridCellForDomElement","document","activeElement","eBrowserCell","ePointer","cellCtrl","getDomData","DOM_DATA_KEY_CELL_CTRL","getCellPosition","parentNode","onCellFocused","getFocusedCell","setFocusedCell","rowIndex","colKey","floating","forceBrowserFocus","gridColumn","rowPinned","isCellFocused","cellPosition","isRowFocused","isRowNodeFocused","rowNode","isHeaderWrapperFocused","headerWrapper","focusedHeaderPosition","getColumn","headerRowIndex","getParentComponent","getRowIndex","pinned","getPinned","_a","focusedColumn","focusedHeaderRowIndex","clearFocusedHeader","getFocusedHeader","setFocusedHeader","focusHeaderPosition","headerPosition","direction","fromTab","allowUserOverride","currentPosition","headerRowCount","headerNavigationService","getHeaderRowCount","userFunc","getTabToNextHeaderFunc","params","backwards","previousHeaderPosition","nextHeaderPosition","getNavigateToNextHeaderFunc","focusGridView","scrollToColumn","childContainer","getHeaderContainer","rowComps","getRowComps","nextRowComp","headerComps","getHeaderComps","nextHeader","getUniqueId","getFocusableElement","focus","isAnyCellFocused","findFocusableElements","rootNode","exclude","onlyUnmanaged","focusableString","FOCUSABLE_SELECTOR","excludeString","FOCUSABLE_EXCLUDE","nodes","slice","querySelectorAll","excludeNodes","diff","element","focusInto","up","focusableElements","toFocus","findNextFocusableElement","onlyManaged","focusable","currentIndex","el","contains","nextIndex","isFocusUnderManagedComponent","managedContainers","FOCUS_MANAGED_CLASS","findTabbableParent","node","limit","counter","parentElement","EVENT_CELL_FOCUSED","api","gridApi","columnApi","isFullWidthCell","rowCtrl","rowRenderer","getRowByPosition","isFullWidth","nextRow","rowPositionUtils","getLastRow","getFirstRow","focusedHeader","navigationService","ensureCellVisible","rangeService","setRangeToCell","focusNextGridCoreContainer","focusNextInnerContainer","forceFocusOutOfContainer","AG_KEYBOARD_FOCUS","Map"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Autowired, Bean, Optional, PostConstruct } from \"./context/context\";\nimport { BeanStub } from \"./context/beanStub\";\nimport { Events } from \"./events\";\nimport { ManagedFocusFeature } from \"./widgets/managedFocusFeature\";\nimport { getTabIndex } from './utils/browser';\nimport { findIndex, last } from './utils/array';\nimport { makeNull } from './utils/generic';\nimport { Constants } from \"./constants/constants\";\nimport { CellCtrl } from \"./rendering/cell/cellCtrl\";\nvar FocusService = /** @class */ (function (_super) {\n    __extends(FocusService, _super);\n    function FocusService() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FocusService_1 = FocusService;\n    /**\n     * Adds a gridCore to the list of the gridCores monitoring Keyboard Mode\n     * in a specific HTMLDocument.\n     *\n     * @param doc {Document} - The Document containing the gridCore.\n     * @param gridCore {GridComp} - The GridCore to be monitored.\n     */\n    FocusService.addKeyboardModeEvents = function (doc, controller) {\n        var docControllers = FocusService_1.instancesMonitored.get(doc);\n        if (docControllers && docControllers.length > 0) {\n            if (docControllers.indexOf(controller) === -1) {\n                docControllers.push(controller);\n            }\n        }\n        else {\n            FocusService_1.instancesMonitored.set(doc, [controller]);\n            doc.addEventListener('keydown', FocusService_1.toggleKeyboardMode);\n            doc.addEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n        }\n    };\n    /**\n     * Removes a gridCore from the list of the gridCores monitoring Keyboard Mode\n     * in a specific HTMLDocument.\n     *\n     * @param doc {Document} - The Document containing the gridCore.\n     * @param gridCore {GridComp} - The GridCore to be removed.\n     */\n    FocusService.removeKeyboardModeEvents = function (doc, controller) {\n        var docControllers = FocusService_1.instancesMonitored.get(doc);\n        var newControllers = [];\n        if (docControllers && docControllers.length) {\n            newControllers = __spreadArrays(docControllers).filter(function (currentGridCore) { return currentGridCore !== controller; });\n            FocusService_1.instancesMonitored.set(doc, newControllers);\n        }\n        if (newControllers.length === 0) {\n            doc.removeEventListener('keydown', FocusService_1.toggleKeyboardMode);\n            doc.removeEventListener('mousedown', FocusService_1.toggleKeyboardMode);\n        }\n    };\n    /**\n     * This method will be called by `keydown` and `mousedown` events on all Documents monitoring\n     * KeyboardMode. It will then fire a KEYBOARD_FOCUS, MOUSE_FOCUS on each gridCore present in\n     * the Document allowing each gridCore to maintain a state for KeyboardMode.\n     *\n     * @param event {KeyboardEvent | MouseEvent | TouchEvent} - The event triggered.\n     */\n    FocusService.toggleKeyboardMode = function (event) {\n        var isKeyboardActive = FocusService_1.keyboardModeActive;\n        var isKeyboardEvent = event.type === 'keydown';\n        if (isKeyboardEvent) {\n            // the following keys should not toggle keyboard mode.\n            if (event.ctrlKey || event.metaKey || event.altKey) {\n                return;\n            }\n        }\n        if (isKeyboardActive && isKeyboardEvent || !isKeyboardActive && !isKeyboardEvent) {\n            return;\n        }\n        FocusService_1.keyboardModeActive = isKeyboardEvent;\n        var doc = event.target.ownerDocument;\n        if (!doc) {\n            return;\n        }\n        var controllersForDoc = FocusService_1.instancesMonitored.get(doc);\n        if (controllersForDoc) {\n            controllersForDoc.forEach(function (controller) {\n                controller.dispatchEvent({ type: isKeyboardEvent ? Events.EVENT_KEYBOARD_FOCUS : Events.EVENT_MOUSE_FOCUS });\n            });\n        }\n    };\n    FocusService.prototype.init = function () {\n        var _this = this;\n        var clearFocusedCellListener = this.clearFocusedCell.bind(this);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_PIVOT_MODE_CHANGED, clearFocusedCellListener);\n        this.addManagedListener(this.eventService, Events.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this));\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_GROUP_OPENED, clearFocusedCellListener);\n        this.addManagedListener(this.eventService, Events.EVENT_COLUMN_ROW_GROUP_CHANGED, clearFocusedCellListener);\n        this.ctrlsService.whenReady(function (p) {\n            _this.gridCtrl = p.gridCtrl;\n            var doc = _this.gridOptionsWrapper.getDocument();\n            FocusService_1.addKeyboardModeEvents(doc, _this.gridCtrl);\n            _this.addDestroyFunc(function () { return _this.unregisterGridCompController(_this.gridCtrl); });\n        });\n    };\n    FocusService.prototype.unregisterGridCompController = function (gridCompController) {\n        var doc = this.gridOptionsWrapper.getDocument();\n        FocusService_1.removeKeyboardModeEvents(doc, gridCompController);\n    };\n    FocusService.prototype.onColumnEverythingChanged = function () {\n        // if the columns change, check and see if this column still exists. if it does, then\n        // we can keep the focused cell. if it doesn't, then we need to drop the focused cell.\n        if (!this.focusedCellPosition) {\n            return;\n        }\n        var col = this.focusedCellPosition.column;\n        var colFromColumnModel = this.columnModel.getGridColumn(col.getId());\n        if (col !== colFromColumnModel) {\n            this.clearFocusedCell();\n        }\n    };\n    FocusService.prototype.isKeyboardMode = function () {\n        return FocusService_1.keyboardModeActive;\n    };\n    // we check if the browser is focusing something, and if it is, and\n    // it's the cell we think is focused, then return the cell. so this\n    // methods returns the cell if a) we think it has focus and b) the\n    // browser thinks it has focus. this then returns nothing if we\n    // first focus a cell, then second click outside the grid, as then the\n    // grid cell will still be focused as far as the grid is concerned,\n    // however the browser focus will have moved somewhere else.\n    FocusService.prototype.getFocusCellToUseAfterRefresh = function () {\n        if (this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition) {\n            return null;\n        }\n        // we check that the browser is actually focusing on the grid, if it is not, then\n        // we have nothing to worry about\n        if (!this.getGridCellForDomElement(document.activeElement)) {\n            return null;\n        }\n        return this.focusedCellPosition;\n    };\n    FocusService.prototype.getGridCellForDomElement = function (eBrowserCell) {\n        var ePointer = eBrowserCell;\n        while (ePointer) {\n            var cellCtrl = this.gridOptionsWrapper.getDomData(ePointer, CellCtrl.DOM_DATA_KEY_CELL_CTRL);\n            if (cellCtrl) {\n                return cellCtrl.getCellPosition();\n            }\n            ePointer = ePointer.parentNode;\n        }\n        return null;\n    };\n    FocusService.prototype.clearFocusedCell = function () {\n        this.focusedCellPosition = null;\n        this.onCellFocused(false);\n    };\n    FocusService.prototype.getFocusedCell = function () {\n        return this.focusedCellPosition;\n    };\n    FocusService.prototype.setFocusedCell = function (rowIndex, colKey, floating, forceBrowserFocus) {\n        if (forceBrowserFocus === void 0) { forceBrowserFocus = false; }\n        var gridColumn = this.columnModel.getGridColumn(colKey);\n        // if column doesn't exist, then blank the focused cell and return. this can happen when user sets new columns,\n        // and the focused cell is in a column that no longer exists. after columns change, the grid refreshes and tries\n        // to re-focus the focused cell.\n        if (!gridColumn) {\n            this.focusedCellPosition = null;\n            return;\n        }\n        this.focusedCellPosition = gridColumn ? { rowIndex: rowIndex, rowPinned: makeNull(floating), column: gridColumn } : null;\n        this.onCellFocused(forceBrowserFocus);\n    };\n    FocusService.prototype.isCellFocused = function (cellPosition) {\n        if (this.focusedCellPosition == null) {\n            return false;\n        }\n        return this.focusedCellPosition.column === cellPosition.column &&\n            this.isRowFocused(cellPosition.rowIndex, cellPosition.rowPinned);\n    };\n    FocusService.prototype.isRowNodeFocused = function (rowNode) {\n        return this.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\n    };\n    FocusService.prototype.isHeaderWrapperFocused = function (headerWrapper) {\n        if (this.focusedHeaderPosition == null) {\n            return false;\n        }\n        var column = headerWrapper.getColumn();\n        var headerRowIndex = headerWrapper.getParentComponent().getRowIndex();\n        var pinned = headerWrapper.getPinned();\n        var _a = this.focusedHeaderPosition, focusedColumn = _a.column, focusedHeaderRowIndex = _a.headerRowIndex;\n        return column === focusedColumn &&\n            headerRowIndex === focusedHeaderRowIndex &&\n            pinned == focusedColumn.getPinned();\n    };\n    FocusService.prototype.clearFocusedHeader = function () {\n        this.focusedHeaderPosition = null;\n    };\n    FocusService.prototype.getFocusedHeader = function () {\n        return this.focusedHeaderPosition;\n    };\n    FocusService.prototype.setFocusedHeader = function (headerRowIndex, column) {\n        this.focusedHeaderPosition = { headerRowIndex: headerRowIndex, column: column };\n    };\n    FocusService.prototype.focusHeaderPosition = function (headerPosition, direction, fromTab, allowUserOverride, event) {\n        if (direction === void 0) { direction = null; }\n        if (fromTab === void 0) { fromTab = false; }\n        if (allowUserOverride === void 0) { allowUserOverride = false; }\n        if (allowUserOverride) {\n            var gridOptionsWrapper = this.gridOptionsWrapper;\n            var currentPosition = this.getFocusedHeader();\n            var headerRowCount = this.headerNavigationService.getHeaderRowCount();\n            if (fromTab) {\n                var userFunc = gridOptionsWrapper.getTabToNextHeaderFunc();\n                if (userFunc) {\n                    var params = {\n                        backwards: direction === 'Before',\n                        previousHeaderPosition: currentPosition,\n                        nextHeaderPosition: headerPosition,\n                        headerRowCount: headerRowCount\n                    };\n                    headerPosition = userFunc(params);\n                }\n            }\n            else {\n                var userFunc = gridOptionsWrapper.getNavigateToNextHeaderFunc();\n                if (userFunc && event) {\n                    var params = {\n                        key: event.key,\n                        previousHeaderPosition: currentPosition,\n                        nextHeaderPosition: headerPosition,\n                        headerRowCount: headerRowCount,\n                        event: event\n                    };\n                    headerPosition = userFunc(params);\n                }\n            }\n        }\n        if (!headerPosition) {\n            return false;\n        }\n        if (headerPosition.headerRowIndex === -1) {\n            return this.focusGridView(headerPosition.column);\n        }\n        this.headerNavigationService.scrollToColumn(headerPosition.column, direction);\n        var childContainer = this.headerNavigationService.getHeaderContainer(headerPosition.column.getPinned());\n        var rowComps = childContainer.getRowComps();\n        var nextRowComp = rowComps[headerPosition.headerRowIndex];\n        var headerComps = nextRowComp.getHeaderComps();\n        var nextHeader = headerComps[headerPosition.column.getUniqueId()];\n        if (nextHeader) {\n            // this will automatically call the setFocusedHeader method above\n            nextHeader.getFocusableElement().focus();\n            return true;\n        }\n        return false;\n    };\n    FocusService.prototype.isAnyCellFocused = function () {\n        return !!this.focusedCellPosition;\n    };\n    FocusService.prototype.isRowFocused = function (rowIndex, floating) {\n        if (this.focusedCellPosition == null) {\n            return false;\n        }\n        return this.focusedCellPosition.rowIndex === rowIndex && this.focusedCellPosition.rowPinned === makeNull(floating);\n    };\n    FocusService.prototype.findFocusableElements = function (rootNode, exclude, onlyUnmanaged) {\n        if (onlyUnmanaged === void 0) { onlyUnmanaged = false; }\n        var focusableString = Constants.FOCUSABLE_SELECTOR;\n        var excludeString = Constants.FOCUSABLE_EXCLUDE;\n        if (exclude) {\n            excludeString += ', ' + exclude;\n        }\n        if (onlyUnmanaged) {\n            excludeString += ', [tabindex=\"-1\"]';\n        }\n        var nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString));\n        var excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\n        if (!excludeNodes.length) {\n            return nodes;\n        }\n        var diff = function (a, b) { return a.filter(function (element) { return b.indexOf(element) === -1; }); };\n        return diff(nodes, excludeNodes);\n    };\n    FocusService.prototype.focusInto = function (rootNode, up, onlyUnmanaged) {\n        if (up === void 0) { up = false; }\n        if (onlyUnmanaged === void 0) { onlyUnmanaged = false; }\n        var focusableElements = this.findFocusableElements(rootNode, null, onlyUnmanaged);\n        var toFocus = up ? last(focusableElements) : focusableElements[0];\n        if (toFocus) {\n            toFocus.focus();\n            return true;\n        }\n        return false;\n    };\n    FocusService.prototype.findNextFocusableElement = function (rootNode, onlyManaged, backwards) {\n        var focusable = this.findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\n        var currentIndex;\n        if (onlyManaged) {\n            currentIndex = findIndex(focusable, function (el) { return el.contains(document.activeElement); });\n        }\n        else {\n            currentIndex = focusable.indexOf(document.activeElement);\n        }\n        var nextIndex = currentIndex + (backwards ? -1 : 1);\n        if (nextIndex < 0 || nextIndex >= focusable.length) {\n            return null;\n        }\n        return focusable[nextIndex];\n    };\n    FocusService.prototype.isFocusUnderManagedComponent = function (rootNode) {\n        var managedContainers = rootNode.querySelectorAll(\".\" + ManagedFocusFeature.FOCUS_MANAGED_CLASS);\n        if (!managedContainers.length) {\n            return false;\n        }\n        for (var i = 0; i < managedContainers.length; i++) {\n            if (managedContainers[i].contains(document.activeElement)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    FocusService.prototype.findTabbableParent = function (node, limit) {\n        if (limit === void 0) { limit = 5; }\n        var counter = 0;\n        while (node && getTabIndex(node) === null && ++counter <= limit) {\n            node = node.parentElement;\n        }\n        if (getTabIndex(node) === null) {\n            return null;\n        }\n        return node;\n    };\n    FocusService.prototype.onCellFocused = function (forceBrowserFocus) {\n        var event = {\n            type: Events.EVENT_CELL_FOCUSED,\n            forceBrowserFocus: forceBrowserFocus,\n            rowIndex: null,\n            column: null,\n            floating: null,\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            rowPinned: null,\n            isFullWidthCell: false\n        };\n        if (this.focusedCellPosition) {\n            var rowIndex = event.rowIndex = this.focusedCellPosition.rowIndex;\n            var rowPinned = event.rowPinned = this.focusedCellPosition.rowPinned;\n            event.column = this.focusedCellPosition.column;\n            var rowCtrl = this.rowRenderer.getRowByPosition({ rowIndex: rowIndex, rowPinned: rowPinned });\n            if (rowCtrl) {\n                event.isFullWidthCell = rowCtrl.isFullWidth();\n            }\n        }\n        this.eventService.dispatchEvent(event);\n    };\n    FocusService.prototype.focusGridView = function (column, backwards) {\n        var nextRow = backwards\n            ? this.rowPositionUtils.getLastRow()\n            : this.rowPositionUtils.getFirstRow();\n        if (!nextRow) {\n            return false;\n        }\n        var rowIndex = nextRow.rowIndex, rowPinned = nextRow.rowPinned;\n        var focusedHeader = this.getFocusedHeader();\n        if (!column && focusedHeader) {\n            column = focusedHeader.column;\n        }\n        if (rowIndex == null || !column) {\n            return false;\n        }\n        this.navigationService.ensureCellVisible({ rowIndex: rowIndex, column: column, rowPinned: rowPinned });\n        this.setFocusedCell(rowIndex, column, makeNull(rowPinned), true);\n        if (this.rangeService) {\n            var cellPosition = { rowIndex: rowIndex, rowPinned: rowPinned, column: column };\n            this.rangeService.setRangeToCell(cellPosition);\n        }\n        return true;\n    };\n    FocusService.prototype.focusNextGridCoreContainer = function (backwards) {\n        if (this.gridCtrl.focusNextInnerContainer(backwards)) {\n            return true;\n        }\n        if (!backwards) {\n            this.gridCtrl.forceFocusOutOfContainer();\n        }\n        return false;\n    };\n    var FocusService_1;\n    FocusService.AG_KEYBOARD_FOCUS = 'ag-keyboard-focus';\n    FocusService.keyboardModeActive = false;\n    FocusService.instancesMonitored = new Map();\n    __decorate([\n        Autowired('columnModel')\n    ], FocusService.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('headerNavigationService')\n    ], FocusService.prototype, \"headerNavigationService\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], FocusService.prototype, \"columnApi\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], FocusService.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('rowRenderer')\n    ], FocusService.prototype, \"rowRenderer\", void 0);\n    __decorate([\n        Autowired('rowPositionUtils')\n    ], FocusService.prototype, \"rowPositionUtils\", void 0);\n    __decorate([\n        Optional('rangeService')\n    ], FocusService.prototype, \"rangeService\", void 0);\n    __decorate([\n        Autowired('navigationService')\n    ], FocusService.prototype, \"navigationService\", void 0);\n    __decorate([\n        Autowired('ctrlsService')\n    ], FocusService.prototype, \"ctrlsService\", void 0);\n    __decorate([\n        PostConstruct\n    ], FocusService.prototype, \"init\", null);\n    FocusService = FocusService_1 = __decorate([\n        Bean('focusService')\n    ], FocusService);\n    return FocusService;\n}(BeanStub));\nexport { FocusService };\n"]},"metadata":{},"sourceType":"module"}