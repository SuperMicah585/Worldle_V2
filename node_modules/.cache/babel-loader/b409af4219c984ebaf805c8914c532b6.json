{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/mphelps/react-app/TasQDashboard-main/src/components/grid/Grid.jsx\";\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [gridApi, setGridApi] = useState(null);\nconst [gridColumnApi, setGridColumnApi] = useState(null);\n\nconst onGridReady = params => {\n  setGridApi(params.api);\n  setGridColumnApi(params.columnApi);\n};\n\nconst onFirstDataRendered = () => {\n  setValue('#undoInput', 0);\n  disable('#undoInput', true);\n  disable('#undoBtn', true);\n  setValue('#redoInput', 0);\n  disable('#redoInput', true);\n  disable('#redoBtn', true);\n};\n\nconst onCellValueChanged = params => {\n  var undoSize = params.api.getCurrentUndoSize();\n  setValue('#undoInput', undoSize);\n  disable('#undoBtn', undoSize < 1);\n  var redoSize = params.api.getCurrentRedoSize();\n  setValue('#redoInput', redoSize);\n  disable('#redoBtn', redoSize < 1);\n};\n\nconst undo = () => {\n  gridApi.undoCellEditing();\n};\n\nconst redo = () => {\n  gridApi.redoCellEditing();\n};\n\nexport default function RowAndColumnSpacing() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"example-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Available Undo's\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"undoInput\",\n            className: \"undo-redo-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Available Redo's\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"redoInput\",\n            className: \"undo-redo-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"undoBtn\",\n            className: \"undo-btn\",\n            onClick: () => undo(),\n            children: \"Undo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"redoBtn\",\n            className: \"redo-btn\",\n            onClick: () => redo(),\n            children: \"Redo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myGrid\",\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        className: \"ag-theme-alpine\",\n        children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n          defaultColDef: {\n            flex: 1,\n            editable: true\n          },\n          rowData: getRows(),\n          enableRangeSelection: true,\n          enableFillHandle: true,\n          undoRedoCellEditing: true,\n          undoRedoCellEditingLimit: 5,\n          enableCellChangeFlash: true,\n          onGridReady: onGridReady,\n          onFirstDataRendered: onFirstDataRendered,\n          onCellValueChanged: onCellValueChanged,\n          children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"b\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"f\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"g\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n            field: \"h\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = RowAndColumnSpacing;\n;\n\nfunction disable(id, disabled) {\n  document.querySelector(id).disabled = disabled;\n}\n\nfunction setValue(id, value) {\n  document.querySelector(id).value = value;\n}\n\nfunction getRows() {\n  return Array.apply(null, Array(100)).map(function (_, i) {\n    return {\n      a: 'a-' + i,\n      b: 'b-' + i,\n      c: 'c-' + i,\n      d: 'd-' + i,\n      e: 'e-' + i,\n      f: 'f-' + i,\n      g: 'g-' + i,\n      h: 'h-' + i\n    };\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RowAndColumnSpacing\");","map":{"version":3,"sources":["/Users/mphelps/react-app/TasQDashboard-main/src/components/grid/Grid.jsx"],"names":["React","useState","render","AgGridReact","AgGridColumn","gridApi","setGridApi","gridColumnApi","setGridColumnApi","onGridReady","params","api","columnApi","onFirstDataRendered","setValue","disable","onCellValueChanged","undoSize","getCurrentUndoSize","redoSize","getCurrentRedoSize","undo","undoCellEditing","redo","redoCellEditing","RowAndColumnSpacing","width","height","flex","editable","getRows","id","disabled","document","querySelector","value","Array","apply","map","_","i","a","b","c","d","e","f","g","h"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, { useState } from 'react';\nimport { render } from 'react-dom';\nimport { AgGridReact, AgGridColumn } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  const onFirstDataRendered = () => {\n    setValue('#undoInput', 0);\n    disable('#undoInput', true);\n    disable('#undoBtn', true);\n    setValue('#redoInput', 0);\n    disable('#redoInput', true);\n    disable('#redoBtn', true);\n  };\n\n  const onCellValueChanged = (params) => {\n    var undoSize = params.api.getCurrentUndoSize();\n    setValue('#undoInput', undoSize);\n    disable('#undoBtn', undoSize < 1);\n    var redoSize = params.api.getCurrentRedoSize();\n    setValue('#redoInput', redoSize);\n    disable('#redoBtn', redoSize < 1);\n  };\n\n  const undo = () => {\n    gridApi.undoCellEditing();\n  };\n\n  const redo = () => {\n    gridApi.redoCellEditing();\n  };\nexport default function RowAndColumnSpacing() {\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <div className=\"example-wrapper\">\n        <div>\n          <span className=\"button-group\">\n            <label>Available Undo's</label>\n            <input id=\"undoInput\" className=\"undo-redo-input\" />\n            <label>Available Redo's</label>\n            <input id=\"redoInput\" className=\"undo-redo-input\" />\n            <button id=\"undoBtn\" className=\"undo-btn\" onClick={() => undo()}>\n              Undo\n            </button>\n            <button id=\"redoBtn\" className=\"redo-btn\" onClick={() => redo()}>\n              Redo\n            </button>\n          </span>\n        </div>\n        <div\n          id=\"myGrid\"\n          style={{\n            height: '100%',\n            width: '100%',\n          }}\n          className=\"ag-theme-alpine\"\n        >\n          <AgGridReact\n            defaultColDef={{\n              flex: 1,\n              editable: true,\n            }}\n            rowData={getRows()}\n            enableRangeSelection={true}\n            enableFillHandle={true}\n            undoRedoCellEditing={true}\n            undoRedoCellEditingLimit={5}\n            enableCellChangeFlash={true}\n            onGridReady={onGridReady}\n            onFirstDataRendered={onFirstDataRendered}\n            onCellValueChanged={onCellValueChanged}\n          >\n            <AgGridColumn field=\"a\" />\n            <AgGridColumn field=\"b\" />\n            <AgGridColumn field=\"c\" />\n            <AgGridColumn field=\"d\" />\n            <AgGridColumn field=\"e\" />\n            <AgGridColumn field=\"f\" />\n            <AgGridColumn field=\"g\" />\n            <AgGridColumn field=\"h\" />\n          </AgGridReact>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction disable(id, disabled) {\n  document.querySelector(id).disabled = disabled;\n}\nfunction setValue(id, value) {\n  document.querySelector(id).value = value;\n}\nfunction getRows() {\n  return Array.apply(null, Array(100)).map(function (_, i) {\n    return {\n      a: 'a-' + i,\n      b: 'b-' + i,\n      c: 'c-' + i,\n      d: 'd-' + i,\n      e: 'e-' + i,\n      f: 'f-' + i,\n      g: 'g-' + i,\n      h: 'h-' + i,\n    };\n  });\n}\n"]},"metadata":{},"sourceType":"module"}