{"ast":null,"code":"var _jsxFileName = \"/Users/mphelps/react-app/Worldle_V2/src/components/Notword_popup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./notword_popup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notword_popup = () => {\n  _s();\n  const [not_word, setnot_word] = useState(false);\n  useEffect(() => {\n    setnot_word(true);\n  }, []);\n  useEffect(() => {\n    setTimeout(() => setnot_word(true), 1000);\n  }, []);\n\n  //need to makae this scaleable. I.e it only works once.\n  //also on Grid I need to set state to false after 'not a word' if statement is triggered.\n  //setTimeout(() => setnot_word(false),1000)\n\n  //What do I need it to do?\n  //\n\n  //think about using a UseEffect on another component to see if I can control the updates\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-success ${not_word ? 'alert-shown' : 'alert-hidden'}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          display: 'flex',\n          padding: '10px',\n          borderRadius: '2%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Word not found in database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n_s(Notword_popup, \"0b3h1NCwceulbaoG194CPz8ooPE=\");\n_c = Notword_popup;\nexport default Notword_popup;\nvar _c;\n$RefreshReg$(_c, \"Notword_popup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Notword_popup","_s","not_word","setnot_word","setTimeout","children","className","style","backgroundColor","display","padding","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mphelps/react-app/Worldle_V2/src/components/Notword_popup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./notword_popup.css\"\n\n\n\nconst Notword_popup = () => {\n\n\nconst [not_word, setnot_word] = useState(false);\n\n\n useEffect(() => {\nsetnot_word(true);\n}, []);\n\n\n\nuseEffect(() => {\nsetTimeout(() => setnot_word(true),1000)\n}, []);\n\n\n//need to makae this scaleable. I.e it only works once.\n//also on Grid I need to set state to false after 'not a word' if statement is triggered.\n//setTimeout(() => setnot_word(false),1000)\n\n\n\n\n//What do I need it to do?\n//\n\n\n\n\n//think about using a UseEffect on another component to see if I can control the updates\n\n\n  return (\n      <div>\n\n        <div\n          className={`alert alert-success ${(not_word) ? 'alert-shown' : 'alert-hidden'}`}\n\n\n\n        >\n          <div style = {{backgroundColor:'white',display:'flex',padding:'10px',borderRadius:'2%'}}>\n          <strong>Word not found in database</strong>\n          </div>\n        </div>\n\n      </div>\n    );\n};\n\n\n  export default Notword_popup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAG5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAG9CC,SAAS,CAAC,MAAM;IACjBM,WAAW,CAAC,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAINN,SAAS,CAAC,MAAM;IAChBO,UAAU,CAAC,MAAMD,WAAW,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;;EAKA;EACA;;EAKA;;EAGE,oBACIJ,OAAA;IAAAM,QAAA,eAEEN,OAAA;MACEO,SAAS,EAAE,uBAAwBJ,QAAQ,GAAI,aAAa,GAAG,cAAc,EAAG;MAAAG,QAAA,eAKhFN,OAAA;QAAKQ,KAAK,EAAI;UAACC,eAAe,EAAC,OAAO;UAACC,OAAO,EAAC,MAAM;UAACC,OAAO,EAAC,MAAM;UAACC,YAAY,EAAC;QAAI,CAAE;QAAAN,QAAA,eACxFN,OAAA;UAAAM,QAAA,EAAQ;QAA0B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEZ,CAAC;AAACd,EAAA,CAjDID,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAoDjB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}