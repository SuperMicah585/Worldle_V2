{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";//import { render } from \"@testing-library/react\";\nimport\"./Grid.css\";import{evaluate_Guess,evaluateGuess}from\"../evaluate_guess\";import Win from\"./Win_Screen\";import Notword_popup from\"./Notword_popup\";//setShowingAlert(true)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var p=0;// divide this number by 54 to know how many times the page has been rendered(including 1st load)\nvar unique_id=-1;//counter for boxes\nvar x=0;//who knows\nvar enter_tracker=1;//counter for number of guesses\nvar useState=React.useState,useEffect=React.useEffect;var Square=/*#__PURE__*/function(_React$Component){_inherits(Square,_React$Component);var _super=_createSuper(Square);function Square(props){_classCallCheck(this,Square);return _super.call(this,props);}_createClass(Square,[{key:\"render\",value:function render(){{unique_id++;}return/*#__PURE__*/_jsx(\"button\",{id:unique_id,style:{backgroundColor:\"black\"}//need to be able to increment ID so each square is unique, but can't iterate because it is rendered everytime keyboard is pressed\n,className:\"squared\",onClick:function onClick(){return console.log(\"this does nothing\");},children:this.props.value});}}]);return Square;}(React.Component);var KeySquare=/*#__PURE__*/function(_React$Component2){_inherits(KeySquare,_React$Component2);var _super2=_createSuper(KeySquare);function KeySquare(props){_classCallCheck(this,KeySquare);return _super2.call(this,props);}_createClass(KeySquare,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsx(\"button\",{id:this.props.value//in order to track the keyboard squares individually need to be able to identify them\n,className:\"square\",onClick:function onClick(){return _this.props.onClick();}//runs  through function handleclick(this.props.value) = onClick={() => this.handleClick(this.props.value)}\n,children:this.props.value});}}]);return KeySquare;}(React.Component);var Grid=/*#__PURE__*/function(_React$Component3){_inherits(Grid,_React$Component3);var _super3=_createSuper(Grid);function Grid(props){var _this2;_classCallCheck(this,Grid);_this2=_super3.call(this,props);_this2.state={triggers:false,squares:Array(29).fill(null),not_word:false};return _this2;}_createClass(Grid,[{key:\"handleClick\",value:function(){var _handleClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(i){var squares,guess,response_Feedback,z,c,yellow_color,green_color;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://functionality for the Grid\nsquares=this.state.squares.slice();//console.log(this.state.squares.slice()) ;\nif(!(i==='Enter'&&x/enter_tracker===5)){_context.next=12;break;}enter_tracker++;guess=squares.slice(x-5,x);console.log(guess);_context.next=7;return evaluateGuess(['R','E','A','C','T'],guess,enter_tracker);case 7:response_Feedback=_context.sent;console.log(guess);if(response_Feedback===\"You Win!\"){this.setState({triggers:true});//set as true   m = true;\n}else if(response_Feedback===\"this is not a word\"){enter_tracker--;this.setState({not_word:true});}else{for(z=0;z<response_Feedback.length;z++){c=response_Feedback.charAt(z);//activate color for the button\nif(c==='-'){if(document.getElementById(guess[z]).style.background!==\"rgb(221, 201, 141)\"){document.getElementById(guess[z]).style.background=\"#606060\";}}if(c==='O'){// position in string *(1-enter_tracker)*290)+58) +(10*(1-enter_tracket))\n//every time rendered goes up by (*60). 0-60. 58-118\n// p keep trackf of renders.\n// 0 -58, 60 -118, 120 -178\nyellow_color=p/56*60-2-(58-10*(enter_tracker-2)/58*58)+z*2;//0/58, 5/29, 10/29, 15/29, 20/29\nif(document.getElementById(guess[z]).style.background!==\"rgb(0, 208, 132)\"){document.getElementById(guess[z]).style.background=\"#ddc98d\";}document.getElementById(yellow_color).style.background=\"#ddc98d\";//changes colors for keyboard + grid\n}if(c==='X'){green_color=p/56*60-2-(58-10*(enter_tracker-2)/58*58)+z*2;document.getElementById(guess[z]).style.background=\"#00d084\";document.getElementById(green_color).style.background=\"#00d084\";}}}//make Squares[x-1] to squares[x-5] a string and run it through checks from evaluate_guess. == guess\n//Guess_counter == enter_tracker. Code == 5 letter word key. Guess == 5 letter word guess\n//If character is 0 and no other characters of that type in the word, then yellow should not show up on guess or any other guess.\n_context.next=13;break;case 12:if(i==='delete'&&(x%5!==0||x/enter_tracker===5)){this.setState({not_word:false});//temp fix to the problem of not being able to set the state back to false\nx--;squares[x]=null;this.setState({squares:squares});}else if(i!=='delete'&&i!=='Enter'&&x/enter_tracker!==5){this.setState({not_word:false});squares[x]=i;//key get data from keyboard to show up on the GRID. Use squares[Grid index]\nthis.setState({squares:squares});this.setState({color:\"rgb(0, 191, 255)\"});x++;}case 13:case\"end\":return _context.stop();}}},_callee,this);}));function handleClick(_x){return _handleClick.apply(this,arguments);}return handleClick;}()},{key:\"renderSquare\",value:function renderSquare(i){var _this3=this;//adds functionality to keyboard\np++;return/*#__PURE__*/_jsx(KeySquare,{value:i,onClick:function onClick(){return _this3.handleClick(i);}});}},{key:\"renderSquared\",value:function renderSquared(i){//adds button functionality to the Grid\nreturn/*#__PURE__*/_jsx(Square,{value:this.state.squares[i]//Creates the Grid\n//add functionality to squares so that they can change color\n});}},{key:\"winfunction\",value:function winfunction(){if(this.state.triggers===true){return/*#__PURE__*/_jsx(Win,{trigger:this.state.triggers});}}},{key:\"not_wordfunction\",value:function not_wordfunction(){if(this.state.not_word===true){return/*#__PURE__*/_jsx(Notword_popup,{});}else return/*#__PURE__*/_jsx(\"div\",{className:\"boxed\"});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[this.winfunction(),this.not_wordfunction(),/*#__PURE__*/_jsxs(\"div\",{className:\"Grids\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquared(0),this.renderSquared(1),this.renderSquared(2),this.renderSquared(3),this.renderSquared(4)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquared(5),this.renderSquared(6),this.renderSquared(7),this.renderSquared(8),this.renderSquared(9)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquared(10),this.renderSquared(11),this.renderSquared(12),this.renderSquared(13),this.renderSquared(14)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquared(15),this.renderSquared(16),this.renderSquared(17),this.renderSquared(18),this.renderSquared(19)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquared(20),this.renderSquared(21),this.renderSquared(22),this.renderSquared(23),this.renderSquared(24)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquared(25),this.renderSquared(26),this.renderSquared(27),this.renderSquared(28),this.renderSquared(29)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"keyboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquare('Q'),this.renderSquare('W'),this.renderSquare('E'),this.renderSquare('R'),this.renderSquare('T'),this.renderSquare('Y'),this.renderSquare('U'),this.renderSquare('I'),this.renderSquare('O'),this.renderSquare('P')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquare('A'),this.renderSquare('S'),this.renderSquare('D'),this.renderSquare('F'),this.renderSquare('G'),this.renderSquare('H'),this.renderSquare('J'),this.renderSquare('K'),this.renderSquare('L')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[this.renderSquare('Enter'),this.renderSquare('Z'),this.renderSquare('X'),this.renderSquare('C'),this.renderSquare('V'),this.renderSquare('B'),this.renderSquare('N'),this.renderSquare('M'),this.renderSquare('delete')]})]})]});}}]);return Grid;}(React.Component);export default Grid;","map":{"version":3,"sources":["/Users/mphelps/react-app/Worldle_V2/src/components/Grid.js"],"names":["React","evaluate_Guess","evaluateGuess","Win","Notword_popup","p","unique_id","x","enter_tracker","useState","useEffect","Square","props","backgroundColor","console","log","value","Component","KeySquare","onClick","Grid","state","triggers","squares","Array","fill","not_word","i","slice","guess","response_Feedback","setState","z","length","c","charAt","document","getElementById","style","background","yellow_color","green_color","color","handleClick","winfunction","not_wordfunction","renderSquared","renderSquare"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import { render } from \"@testing-library/react\";\n\nimport \"./Grid.css\";\nimport { evaluate_Guess, evaluateGuess } from \"../evaluate_guess\";\nimport Win from \"./Win_Screen\";\nimport Notword_popup from \"./Notword_popup\"\n\n//setShowingAlert(true)\nvar p = 0; // divide this number by 54 to know how many times the page has been rendered(including 1st load)\nvar unique_id = -1; //counter for boxes\nvar x=0; //who knows\nvar enter_tracker =1; //counter for number of guesses\n\n\nconst { useState, useEffect } = React;\n\nclass Square extends React.Component {\n\n  constructor(props) {\n  super(props);\n\n}\n\n    render() {\n        {unique_id++}\n      return (\n\n        <button id={unique_id} style={{ backgroundColor: \"black\" }}\n                                //need to be able to increment ID so each square is unique, but can't iterate because it is rendered everytime keyboard is pressed\n          className=\"squared\"\n          onClick={() => console.log(\"this does nothing\")}\n        >\n          {this.props.value}\n        </button>\n      );\n    }\n\n  }\n\n  class KeySquare extends React.Component {\n\n    constructor(props) {\n    super(props);\n\n  }\n\n\n\n      render() {\n\n        return (\n          <button id = {this.props.value}   //in order to track the keyboard squares individually need to be able to identify them\n          className=\"square\"\n           onClick={() => this.props.onClick()} //runs  through function handleclick(this.props.value) = onClick={() => this.handleClick(this.props.value)}\n           >\n          {this.props.value}\n        </button>\n        );\n      }\n    }\n\n\n\n  class Grid extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        triggers: false,\n          squares: Array(29).fill(null),\n        not_word: false,\n      };\n\n\n\n\n\n    }\n\n\n      async handleClick(i) { //functionality for the Grid\n\n      const squares = this.state.squares.slice();\n      //console.log(this.state.squares.slice()) ;\n\n\n      if(i==='Enter' && x/enter_tracker===5){\n        enter_tracker++;\n        const guess =  squares.slice(x-5,x);\n        console.log(guess)\n        const response_Feedback = await evaluateGuess(['R','E', 'A', 'C','T'], guess,enter_tracker )\n\n        console.log(guess)\n        if(response_Feedback === \"You Win!\"){\n\n          this.setState({triggers:true})\n          //set as true   m = true;\n\n\n        }\n\n      else if(response_Feedback === \"this is not a word\"){\n         enter_tracker--;\n         this.setState({not_word:true})\n\n\n       }\nelse{\n      for (var z=0; z<response_Feedback.length; z++){\n        var c = response_Feedback.charAt(z);\n          //activate color for the button\n\n        if (c === '-'){\n          if ((document.getElementById(guess[z]).style.background) !== \"rgb(221, 201, 141)\"){\n          document.getElementById(guess[z]).style.background=\"#606060\";\n        }\n\n        }\n        if (c === 'O'){\n\n          // position in string *(1-enter_tracker)*290)+58) +(10*(1-enter_tracket))\n          //every time rendered goes up by (*60). 0-60. 58-118\n          // p keep trackf of renders.\n          // 0 -58, 60 -118, 120 -178\n          var yellow_color = ((((p/56)*60)-2) - (58-(((10*(enter_tracker-2))/58) *58)) + (z*2))\n\n          //0/58, 5/29, 10/29, 15/29, 20/29\n          if ((document.getElementById(guess[z]).style.background) !== \"rgb(0, 208, 132)\"){\n          document.getElementById(guess[z]).style.background=\"#ddc98d\";\n        }\n          document.getElementById(yellow_color).style.background=\"#ddc98d\"; //changes colors for keyboard + grid\n        }\n         if(c === 'X'){\n          var green_color = ((((p/56)*60)-2) - (58-(((10*(enter_tracker-2))/58) *58)) + (z*2))\n          document.getElementById(guess[z]).style.background=\"#00d084\";\n          document.getElementById(green_color).style.background=\"#00d084\";\n\n        }\n\n      }\n    }\n\n\n          //make Squares[x-1] to squares[x-5] a string and run it through checks from evaluate_guess. == guess\n          //Guess_counter == enter_tracker. Code == 5 letter word key. Guess == 5 letter word guess\n          //If character is 0 and no other characters of that type in the word, then yellow should not show up on guess or any other guess.\n        }\n\n      else if(i==='delete' && (x%5 !== 0 || x/enter_tracker===5)){\n        this.setState({not_word:false}) //temp fix to the problem of not being able to set the state back to false\n        x--;\n        squares[x] = null;\n        this.setState({squares: squares});\n  }\n\n\n\n      else if (i !== 'delete'  && i !== 'Enter' && x/enter_tracker!==5){\n        this.setState({not_word:false})\n      squares[x] = i; //key get data from keyboard to show up on the GRID. Use squares[Grid index]\n      this.setState({squares: squares});\n      this.setState({color: \"rgb(0, 191, 255)\"})\n      x++;\n\n    }\n    }\n\n    renderSquare(i) { //adds functionality to keyboard\n      p++;\n      return(\n      <KeySquare\n      value={i}\n      onClick={() => this.handleClick(i)}\n      />\n\n    );\n    }\n\n    renderSquared(i) { //adds button functionality to the Grid\n      return (\n\n\n\n        <Square\n          value={this.state.squares[i]}\n\n       //Creates the Grid\n        //add functionality to squares so that they can change color\n        />\n\n      );\n    }\n\n\n    winfunction(){\n      if((this.state.triggers) ===true){\n    return(\n      <Win\n      trigger = {this.state.triggers}\n      />\n    )\n    }\n\n    }\n\n\n\n\n    not_wordfunction(){\n      if((this.state.not_word) ===true){\n    return(\n\n      <Notword_popup\n      />\n\n    )\n    }\n    else\n    return(\n      <div className=\"boxed\">\n\n    </div>);\n    }\n\n\n    render() {\n\n\n\n      return (\n        <div>\n\n\n{this.winfunction()}\n{this.not_wordfunction()}\n\n        <div className = \"Grids\">\n          <div className=\"board-row\">\n            {this.renderSquared(0)}\n            {this.renderSquared(1)}\n            {this.renderSquared(2)}\n            {this.renderSquared(3)}\n            {this.renderSquared(4)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquared(5)}\n            {this.renderSquared(6)}\n            {this.renderSquared(7)}\n            {this.renderSquared(8)}\n            {this.renderSquared(9)}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquared(10)}\n          {this.renderSquared(11)}\n          {this.renderSquared(12)}\n          {this.renderSquared(13)}\n          {this.renderSquared(14)}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquared(15)}\n          {this.renderSquared(16)}\n          {this.renderSquared(17)}\n          {this.renderSquared(18)}\n          {this.renderSquared(19)}\n            </div>\n          <div className=\"board-row\">\n          {this.renderSquared(20)}\n          {this.renderSquared(21)}\n          {this.renderSquared(22)}\n          {this.renderSquared(23)}\n          {this.renderSquared(24)}\n          </div>\n                <div className=\"board-row\">\n          {this.renderSquared(25)}\n          {this.renderSquared(26)}\n          {this.renderSquared(27)}\n          {this.renderSquared(28)}\n          {this.renderSquared(29)}\n          </div>\n        </div>\n\n        <div className = \"keyboard\">\n          <div className=\"board-row\">\n            {this.renderSquare('Q')}\n            {this.renderSquare('W')}\n            {this.renderSquare('E')}\n            {this.renderSquare('R')}\n            {this.renderSquare('T')}\n            {this.renderSquare('Y')}\n            {this.renderSquare('U')}\n            {this.renderSquare('I')}\n            {this.renderSquare('O')}\n            {this.renderSquare('P')}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquare('A')}\n          {this.renderSquare('S')}\n          {this.renderSquare('D')}\n          {this.renderSquare('F')}\n          {this.renderSquare('G')}\n          {this.renderSquare('H')}\n          {this.renderSquare('J')}\n          {this.renderSquare('K')}\n          {this.renderSquare('L')}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquare('Enter')}\n          {this.renderSquare('Z')}\n          {this.renderSquare('X')}\n          {this.renderSquare('C')}\n          {this.renderSquare('V')}\n          {this.renderSquare('B')}\n          {this.renderSquare('N')}\n          {this.renderSquare('M')}\n          {this.renderSquare('delete')}\n          </div>\n        </div>\n        </div>\n      );\n    }\n  }\n\n\nexport default Grid;\n"]},"metadata":{},"sourceType":"module"}