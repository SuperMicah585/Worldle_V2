{"ast":null,"code":"import React,{useState,useEffect}from'react';import\"./notword_popup.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const Notword_popup=()=>{const[not_word,setnot_word]=useState(false);useEffect(()=>{setnot_word(true);},[]);useEffect(()=>{setTimeout(()=>setnot_word(false),1000);},[]);//need to makae this scaleable. I.e it only works once.\n//also on Grid I need to set state to false after 'not a word' if statement is triggered.\n//setTimeout(() => setnot_word(false),1000)\n//What do I need it to do?\n//\n//think about using a UseEffect on another component to see if I can control the updates\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:`alert alert-success ${not_word?'alert-shown':'alert-hidden'}`,children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'red',display:'flex',padding:'15px',borderRadius:'10px',zIndex:100},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Word not found in database\"})})})});};export default Notword_popup;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","Notword_popup","not_word","setnot_word","setTimeout","children","className","style","backgroundColor","display","padding","borderRadius","zIndex"],"sources":["/Users/mphelps/react-app/Worldle_V2/src/components/Notword_popup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./notword_popup.css\"\n\n\n\nconst Notword_popup = () => {\n\n\nconst [not_word, setnot_word] = useState(false);\n\n\n useEffect(() => {\nsetnot_word(true);\n}, []);\n\n\n\nuseEffect(() => {\nsetTimeout(() => setnot_word(false),1000)\n}, []);\n\n\n//need to makae this scaleable. I.e it only works once.\n//also on Grid I need to set state to false after 'not a word' if statement is triggered.\n//setTimeout(() => setnot_word(false),1000)\n\n\n\n\n//What do I need it to do?\n//\n\n\n\n\n//think about using a UseEffect on another component to see if I can control the updates\n\n\n  return (\n      <div>\n\n        <div\n          className={`alert alert-success ${(not_word) ? 'alert-shown' : 'alert-hidden'}`}\n\n\n\n        >\n          <div style = {{backgroundColor:'red',display:'flex',padding:'15px',borderRadius:'10px',zIndex:100}}>\n          <strong>Word not found in database</strong>\n          </div>\n        </div>\n\n      </div>\n    );\n};\n\n\n  export default Notword_popup;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,qBAAqB,QAAAC,GAAA,IAAAC,IAAA,yBAI5B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAG5B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CAG9CC,SAAS,CAAC,IAAM,CACjBK,WAAW,CAAC,IAAI,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAINL,SAAS,CAAC,IAAM,CAChBM,UAAU,CAAC,IAAMD,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAGN;AACA;AACA;AAKA;AACA;AAKA;AAGE,mBACIH,IAAA,QAAAK,QAAA,cAEEL,IAAA,QACEM,SAAS,CAAE,uBAAwBJ,QAAQ,CAAI,aAAa,CAAG,cAAc,EAAG,CAAAG,QAAA,cAKhFL,IAAA,QAAKO,KAAK,CAAI,CAACC,eAAe,CAAC,KAAK,CAACC,OAAO,CAAC,MAAM,CAACC,OAAO,CAAC,MAAM,CAACC,YAAY,CAAC,MAAM,CAACC,MAAM,CAAC,GAAG,CAAE,CAAAP,QAAA,cACnGL,IAAA,WAAAK,QAAA,CAAQ,4BAA0B,CAAQ,CAAC,CACtC,CAAC,CACH,CAAC,CAEH,CAAC,CAEZ,CAAC,CAGC,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}