{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mphelps/react-app/Worldle_V2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var evaluateGuess=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(code,guesses,guessCounter){var feedback,string_guess,codeCopy,guessesCopy,stringCopy,y,_y,_y2,_y3,_y4,i,is_word,a,_i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:feedback=\"\";string_guess=\"\";codeCopy=[];guessesCopy=[];stringCopy=\"\";for(y=0;y<=4;y++){string_guess=string_guess+guesses[y];}//copies\nfor(_y=0;_y<=4;_y++){codeCopy[_y]=code[_y];}for(_y2=0;_y2<=4;_y2++){guessesCopy[_y2]=guesses[_y2];}//----created copy of arays\nfor(_y3=0;_y3<=4;_y3++){if(codeCopy[_y3]===guessesCopy[_y3]){codeCopy[_y3]=null;guessesCopy[_y3]='X';//order matters so have to set code to null and guesses to green\n}}for(_y4=0;_y4<=4;_y4++){for(i=0;i<=4;i++){if(guessesCopy[i]===codeCopy[_y4]){codeCopy[_y4]=null;//similiar to above, but indexes dont have to match + greens have already been filtered\nguessesCopy[i]='O';}}}console.log(guessesCopy);console.log(codeCopy);is_word=fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+string_guess)//1\n.then(function(response){return response.json();})//2\n.then(function(word){return word[0];//3\n});_context.next=15;return is_word;case 15:a=_context.sent;if(a===undefined){feedback=\"this is not a word\";}else{for(_i=0;_i<=4;_i++){if(guessesCopy[_i]==='X'){feedback+=\"X\";}else if(guessesCopy[_i]===\"O\"){//error becayse a is undefined\nfeedback+=\"O\";}else{feedback+=\"-\";}}//checks to see if they guessed the right word\nif(feedback==='XXXXX'){feedback=\"You Win!\";}else if(guessCounter===7){feedback=\"You Lose!\";}}return _context.abrupt(\"return\",feedback);case 18:case\"end\":return _context.stop();}}},_callee);}));return function evaluateGuess(_x,_x2,_x3){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/mphelps/react-app/Worldle_V2/src/evaluate_guess.js"],"names":["evaluateGuess","code","guesses","guessCounter","feedback","string_guess","codeCopy","guessesCopy","stringCopy","y","i","console","log","is_word","fetch","then","response","json","word","a","undefined"],"mappings":"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","sourcesContent":["export const evaluateGuess = async (code, guesses, guessCounter) => {\n  let feedback = \"\";\n  let string_guess =\"\"\n  let codeCopy = [];\n  let guessesCopy = [];\nlet stringCopy =\"\"\n\n\nfor (let y = 0; y <= 4; y++) {\n  string_guess=string_guess+guesses[y];\n}\n\n\n//copies\nfor (let y = 0; y <= 4; y++) {\n  codeCopy[y] =code[y];\n}\n\nfor (let y = 0; y <= 4; y++) {\n  guessesCopy[y] =guesses[y];\n}\n//----created copy of arays\n\nfor (let y = 0; y <= 4; y++) {\n  if(codeCopy[y] === guessesCopy[y]){\n    codeCopy[y] = null;\n    guessesCopy[y] ='X';   //order matters so have to set code to null and guesses to green\n  }\n}\n\nfor (let y = 0; y <= 4; y++) {\n    for (let i = 0; i <= 4; i++) {\n      if (guessesCopy[i] === codeCopy[y]){\n        codeCopy[y] = null;          //similiar to above, but indexes dont have to match + greens have already been filtered\n        guessesCopy[i] ='O';\n      }\n    }\n  }\n\n\n\n\nconsole.log(guessesCopy);\nconsole.log(codeCopy);\n\n\n\nconst is_word = fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+string_guess) //1\n  .then((response) => response.json()) //2\n  .then((word) => {\n    return word[0]; //3\n  });\n\n\n\n  const a = await is_word;\n  if (a === undefined){\n\n\n      feedback = \"this is not a word\"\n\n  }\n  else{\n\n\n  for (let i = 0; i <= 4; i++) {\n    if (guessesCopy[i] === 'X') {\n      feedback += \"X\";\n    }\n    else if (guessesCopy[i] === \"O\") { //error becayse a is undefined\n      feedback += \"O\";\n    }\n    else{\n      feedback += \"-\";\n    }\n  }\n\n//checks to see if they guessed the right word\nif (feedback === 'XXXXX'){\n  feedback = \"You Win!\"\n\n}\nelse if(guessCounter===7){\n  feedback = \"You Lose!\"\n}\n\n}\n\n\n  return feedback;\n\n\n\n\n\n};\n"]},"metadata":{},"sourceType":"module"}