{"version":3,"sources":["components/Header.js","evaluate_guess.js","components/Win_Screen.js","components/Notword_popup.js","components/Grid.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","evaluateGuess","code","guesses","guessCounter","a","feedback","string_guess","codeCopy","guessesCopy","y","i","console","log","is_word","fetch","then","response","json","word","undefined","Win","props","state","trigger","this","onClick","setState","React","Component","Notword_popup","useState","not_word","setnot_word","useEffect","setTimeout","p","unique_id","x","enter_tracker","Square","id","style","backgroundColor","value","KeySquare","Grid","triggers","squares","Array","fill","slice","guess","response_Feedback","z","length","c","charAt","document","getElementById","background","yellow_color","green_color","color","handleClick","winfunction","not_wordfunction","renderSquared","renderSquare","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fb638473.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  return(\n    <div className=\"Header\">\n      <h1>Worldle</h1>\n    </div>\n);\n}\n","export const evaluateGuess = async (code, guesses, guessCounter) => {\n  let feedback = \"\";\n  let string_guess =\"\"\n  let codeCopy = [];\n  let guessesCopy = [];\nlet stringCopy =\"\"\n\n\nfor (let y = 0; y <= 4; y++) {\n  string_guess=string_guess+guesses[y];\n}\n\n\n//copies\nfor (let y = 0; y <= 4; y++) {\n  codeCopy[y] =code[y];\n}\n\nfor (let y = 0; y <= 4; y++) {\n  guessesCopy[y] =guesses[y];\n}\n//----created copy of arays\n\nfor (let y = 0; y <= 4; y++) {\n  if(codeCopy[y] === guessesCopy[y]){\n    codeCopy[y] = null;\n    guessesCopy[y] ='X';   //order matters so have to set code to null and guesses to green\n  }\n}\n\nfor (let y = 0; y <= 4; y++) {\n    for (let i = 0; i <= 4; i++) {\n      if (guessesCopy[i] === codeCopy[y]){\n        codeCopy[y] = null;          //similiar to above, but indexes dont have to match + greens have already been filtered\n        guessesCopy[i] ='O';\n      }\n    }\n  }\n\n\n\n\nconsole.log(guessesCopy);\nconsole.log(codeCopy);\n\n\n\nconst is_word = fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+string_guess) //1\n  .then((response) => response.json()) //2\n  .then((word) => {\n    return word[0]; //3\n  });\n\n\n\n  const a = await is_word;\n  if (a === undefined){\n\n\n      feedback = \"this is not a word\"\n\n  }\n  else{\n\n\n  for (let i = 0; i <= 4; i++) {\n    if (guessesCopy[i] === 'X') {\n      feedback += \"X\";\n    }\n    else if (guessesCopy[i] === \"O\") { //error becayse a is undefined\n      feedback += \"O\";\n    }\n    else{\n      feedback += \"-\";\n    }\n  }\n\n//checks to see if they guessed the right word\nif (feedback === 'XXXXX'){\n  feedback = \"You Win!\"\n\n}\nelse if(guessCounter===7){\n  feedback = \"You Lose!\"\n}\n\n}\n\n\n  return feedback;\n\n\n\n\n\n};\n","import React from 'react';\nimport \"./Win_Screen.css\"\n\nclass Win extends React.Component {\n\n  constructor(props) {\n  super(props);\nconsole.log(this);\n  this.state ={\n    trigger: this.props[\"trigger\"],\n  };\n\n}\n\n\n\n    render() {\n      return (\n        <div>\n        {(this.state[\"trigger\"]) ? (\n        <div className =\"popup\">\n        <div className =\"popup-inner\">\n        <button className=\"close-btn\" onClick={() => this.setState({trigger: false})}>close</button>\n        {\"   You win!\"}\n        </div>\n        </div>\n      ) : \"\" }\n        </div>\n\n\n      );\n    }\n\n  }\n  export default Win;\n","import React, { useState, useEffect } from 'react';\nimport \"./notword_popup.css\"\n\n\n\nconst Notword_popup = () => {\n\n\nconst [not_word, setnot_word] = useState(false);\n\n\n useEffect(() => {\nsetnot_word(true);\n}, []);\n\n\n\nuseEffect(() => {\nsetTimeout(() => setnot_word(false),1000)\n}, []);\n\n\n//need to makae this scaleable. I.e it only works once.\n//also on Grid I need to set state to false after 'not a word' if statement is triggered.\n//setTimeout(() => setnot_word(false),1000)\n\n\n\n\n//What do I need it to do?\n//\n\n\n\n\n//think about using a UseEffect on another component to see if I can control the updates\n\n\n  return (\n      <div>\n\n        <div\n          className={`alert alert-success ${(not_word) ? 'alert-shown' : 'alert-hidden'}`}\n\n\n\n        >\n          {}\n          <strong>Word not found in database</strong>\n            {}\n        </div>\n\n//why does it only work with button?\n// button -> changes state to true. Rerenders page and goes through if statement that goes through the onTransitionEnd\n//no buton -> starts as true. shows alert, but never transitions to false. That is the question!\n//-----\n//difference is that we do not use setState with no button\n      </div>\n    );\n};\n\n\n  export default Notword_popup;\n","import React from \"react\";\n//import { render } from \"@testing-library/react\";\n\nimport \"./Grid.css\";\nimport { evaluate_Guess, evaluateGuess } from \"../evaluate_guess\";\nimport Win from \"./Win_Screen\";\nimport Notword_popup from \"./Notword_popup\"\n\n//setShowingAlert(true)\nvar p = 0; // divide this number by 54 to know how many times the page has been rendered(including 1st load)\nvar unique_id = -1; //counter for boxes\nvar x=0; //who knows\nvar enter_tracker =1; //counter for number of guesses\n\n\nconst { useState, useEffect } = React;\n\nclass Square extends React.Component {\n\n  constructor(props) {\n  super(props);\n\n}\n\n    render() {\n        {unique_id++}\n      return (\n\n        <button id={unique_id} style={{ backgroundColor: \"black\" }} //need to rethink this. Not working.\n                                //need to be able to increment ID so each square is unique, but can't iterate because it is rendered everytime keyboard is pressed\n          className=\"squared\"\n          onClick={() => console.log(\"this does nothing\")}\n        >\n          {this.props.value}\n          {console.log(unique_id)}\n        </button>\n      );\n    }\n\n  }\n\n  class KeySquare extends React.Component {\n\n    constructor(props) {\n    super(props);\n\n  }\n\n\n\n      render() {\n\n        return (\n          <button id = {this.props.value}   //in order to track the keyboard squares individually need to be able to identify them\n          className=\"square\"\n           onClick={() => this.props.onClick()} //runs  through function handleclick(this.props.value) = onClick={() => this.handleClick(this.props.value)}\n           >\n          {this.props.value}\n        </button>\n        );\n      }\n    }\n\n\n\n  class Grid extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        triggers: false,\n          squares: Array(29).fill(null),\n        not_word: false,\n      };\n\n\n\n\n\n    }\n\n\n      async handleClick(i) { //functionality for the Grid\n\n      const squares = this.state.squares.slice();\n      //console.log(this.state.squares.slice()) ;\n\n\n      if(i==='Enter' && x/enter_tracker===5){\n        enter_tracker++;\n        const guess =  squares.slice(x-5,x);\n        console.log(guess)\n        const response_Feedback = await evaluateGuess(['R','E', 'A', 'C','T'], guess,enter_tracker )\n\n        console.log(guess)\n        if(response_Feedback === \"You Win!\"){\n\n          this.setState({triggers:true})\n          //set as true   m = true;\n\n\n        }\n\n      else if(response_Feedback === \"this is not a word\"){\n         enter_tracker--;\n         this.setState({not_word:true})\n\n\n       }\nelse{\n      for (var z=0; z<response_Feedback.length; z++){\n        var c = response_Feedback.charAt(z);\n          //activate color for the button\n\n        if (c === '-'){\n          if ((document.getElementById(guess[z]).style.background) !== \"rgb(221, 201, 141)\"){\n          document.getElementById(guess[z]).style.background=\"#606060\";\n        }\n\n        }\n        if (c === 'O'){\n\n          // position in string *(1-enter_tracker)*290)+58) +(10*(1-enter_tracket))\n          //every time rendered goes up by (*60). 0-60. 58-118\n          // p keep trackf of renders.\n          // 0 -58, 60 -118, 120 -178\n          var yellow_color = ((((p/56)*60)-2) - (58-(((10*(enter_tracker-2))/58) *58)) + (z*2));\n\n          //0/58, 5/29, 10/29, 15/29, 20/29\n          console.log(yellow_color);\n          console.log(document.getElementById(yellow_color));\n          if ((document.getElementById(guess[z]).style.background) !== \"rgb(0, 208, 132)\"){\n          document.getElementById(guess[z]).style.background=\"#ddc98d\";\n        }\n          document.getElementById(yellow_color).style.background=\"#ddc98d\"; //changes colors for keyboard + grid\n        }\n         if(c === 'X'){\n          var green_color = ((((p/56)*60)-2) - (58-(((10*(enter_tracker-2))/58) *58)) + (z*2));\n          document.getElementById(guess[z]).style.background=\"#00d084\";\n          document.getElementById(green_color).style.background=\"#00d084\";\n\n        }\n\n      }\n    }\n\n\n          //make Squares[x-1] to squares[x-5] a string and run it through checks from evaluate_guess. == guess\n          //Guess_counter == enter_tracker. Code == 5 letter word key. Guess == 5 letter word guess\n          //If character is 0 and no other characters of that type in the word, then yellow should not show up on guess or any other guess.\n        }\n\n      else if(i==='delete' && (x%5 !== 0 || x/enter_tracker===5)){\n        this.setState({not_word:false}) //temp fix to the problem of not being able to set the state back to false\n        x--;\n        squares[x] = null;\n        this.setState({squares: squares});\n  }\n\n\n\n      else if (i !== 'delete'  && i !== 'Enter' && x/enter_tracker!==5){\n        this.setState({not_word:false})\n      squares[x] = i; //key get data from keyboard to show up on the GRID. Use squares[Grid index]\n      this.setState({squares: squares});\n      this.setState({color: \"rgb(0, 191, 255)\"})\n      x++;\n\n    }\n    }\n\n    renderSquare(i) { //adds functionality to keyboard\n      p++;\n      return(\n      <KeySquare\n      value={i}\n      onClick={() => this.handleClick(i)}\n      />\n\n    );\n    }\n\n    renderSquared(i) { //adds button functionality to the Grid\n      return (\n\n\n\n        <Square\n          value={this.state.squares[i]}\n\n       //Creates the Grid\n        //add functionality to squares so that they can change color\n        />\n\n      );\n    }\n\n\n    winfunction(){\n      if((this.state.triggers) ===true){\n    return(\n      <Win\n      trigger = {this.state.triggers}\n      />\n    )\n    }\n\n    }\n\n\n\n\n    not_wordfunction(){\n      if((this.state.not_word) ===true){\n    return(\n\n      <Notword_popup\n      />\n\n    )\n    }\n    else\n    return(\n      <div className=\"boxed\">\n\n    </div>);\n    }\n\n\n    render() {\n\n\n\n      return (\n        <div>\n\n\n{this.winfunction()}\n{this.not_wordfunction()}\n\n        <div className = \"Grids\">\n          <div className=\"board-row\">\n            {this.renderSquared(0)}\n            {this.renderSquared(1)}\n            {this.renderSquared(2)}\n            {this.renderSquared(3)}\n            {this.renderSquared(4)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquared(5)}\n            {this.renderSquared(6)}\n            {this.renderSquared(7)}\n            {this.renderSquared(8)}\n            {this.renderSquared(9)}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquared(10)}\n          {this.renderSquared(11)}\n          {this.renderSquared(12)}\n          {this.renderSquared(13)}\n          {this.renderSquared(14)}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquared(15)}\n          {this.renderSquared(16)}\n          {this.renderSquared(17)}\n          {this.renderSquared(18)}\n          {this.renderSquared(19)}\n            </div>\n          <div className=\"board-row\">\n          {this.renderSquared(20)}\n          {this.renderSquared(21)}\n          {this.renderSquared(22)}\n          {this.renderSquared(23)}\n          {this.renderSquared(24)}\n          </div>\n                <div className=\"board-row\">\n          {this.renderSquared(25)}\n          {this.renderSquared(26)}\n          {this.renderSquared(27)}\n          {this.renderSquared(28)}\n          {this.renderSquared(29)}\n          </div>\n        </div>\n\n        <div className = \"keyboard\">\n          <div className=\"board-row\">\n            {this.renderSquare('Q')}\n            {this.renderSquare('W')}\n            {this.renderSquare('E')}\n            {this.renderSquare('R')}\n            {this.renderSquare('T')}\n            {this.renderSquare('Y')}\n            {this.renderSquare('U')}\n            {this.renderSquare('I')}\n            {this.renderSquare('O')}\n            {this.renderSquare('P')}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquare('A')}\n          {this.renderSquare('S')}\n          {this.renderSquare('D')}\n          {this.renderSquare('F')}\n          {this.renderSquare('G')}\n          {this.renderSquare('H')}\n          {this.renderSquare('J')}\n          {this.renderSquare('K')}\n          {this.renderSquare('L')}\n          </div>\n          <div className=\"board-row\">\n          {this.renderSquare('Enter')}\n          {this.renderSquare('Z')}\n          {this.renderSquare('X')}\n          {this.renderSquare('C')}\n          {this.renderSquare('V')}\n          {this.renderSquare('B')}\n          {this.renderSquare('N')}\n          {this.renderSquare('M')}\n          {this.renderSquare('delete')}\n          </div>\n        </div>\n        </div>\n      );\n    }\n  }\n\n\nexport default Grid;\n","import Header from \"./Header\";\nimport Grid from \"./Grid\";\nimport \"./Game.css\"\n\nexport default function Home() {\nreturn(\n<div className = \"Worldle\">\n\n\n<div className = \"Header\">\n<Header/>\n</div>\n\n<div className = \"Grid\">\n<Grid/>\n</div>\n\n\n\n</div>\n)\n}\n","import Game from \"./components/Game\"\n\nfunction App() {\n  return <div className=\"App\">\n\n  <Game/>\n\n  </div>\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}