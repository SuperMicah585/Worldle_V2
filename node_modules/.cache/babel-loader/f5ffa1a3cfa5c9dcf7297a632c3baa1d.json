{"ast":null,"code":"/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Column } from \"../../entities/column\";\nimport { ColumnGroup } from \"../../entities/columnGroup\";\nimport { Constants } from \"../../constants/constants\";\nimport { Autowired, PostConstruct } from \"../../context/context\";\nimport { CssClassApplier } from \"../cssClassApplier\";\nimport { DragAndDropService, DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { SetLeftFeature } from \"../../rendering/features/setLeftFeature\";\nimport { HoverFeature } from \"../hoverFeature\";\nimport { AbstractHeaderWrapper } from \"../header/abstractHeaderWrapper\";\nimport { OriginalColumnGroup } from \"../../entities/originalColumnGroup\";\nimport { setAriaExpanded } from \"../../utils/aria\";\nimport { removeFromArray } from \"../../utils/array\";\nimport { removeFromParent, addCssClass, removeCssClass, addOrRemoveCssClass } from \"../../utils/dom\";\nimport { KeyCode } from '../../constants/keyCode';\nimport { ManagedFocusFeature } from \"../../widgets/managedFocusFeature\";\n\nvar HeaderGroupWrapperComp = function (_super) {\n  __extends(HeaderGroupWrapperComp, _super);\n\n  function HeaderGroupWrapperComp(columnGroup, pinned) {\n    var _this = _super.call(this, HeaderGroupWrapperComp.TEMPLATE) || this; // the children can change, we keep destroy functions related to listening to the children here\n\n\n    _this.removeChildListenersFuncs = [];\n    _this.column = columnGroup;\n    _this.pinned = pinned;\n    return _this;\n  }\n\n  HeaderGroupWrapperComp.prototype.postConstruct = function () {\n    CssClassApplier.addHeaderClassesFromColDef(this.getComponentHolder(), this.getGui(), this.gridOptionsWrapper, null, this.column);\n    var displayName = this.columnModel.getDisplayNameForColumnGroup(this.column, 'header');\n    this.appendHeaderGroupComp(displayName);\n    this.setupResize();\n    this.addClasses();\n    this.setupWidth();\n    this.addAttributes();\n    this.setupMovingCss();\n    this.setupTooltip();\n    this.setupExpandable();\n    this.createManagedBean(new HoverFeature(this.column.getOriginalColumnGroup().getLeafColumns(), this.getGui()));\n    this.createManagedBean(new SetLeftFeature(this.column, this.getGui(), this.beans));\n    this.createManagedBean(new ManagedFocusFeature(this.getFocusableElement(), {\n      shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n      onTabKeyDown: this.onTabKeyDown.bind(this),\n      handleKeyDown: this.handleKeyDown.bind(this),\n      onFocusIn: this.onFocusIn.bind(this)\n    }));\n  };\n\n  HeaderGroupWrapperComp.prototype.onFocusIn = function (e) {\n    if (!this.getGui().contains(e.relatedTarget)) {\n      var headerRow = this.getParentComponent();\n      this.beans.focusService.setFocusedHeader(headerRow.getRowIndex(), this.getColumn());\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.handleKeyDown = function (e) {\n    var activeEl = document.activeElement;\n    var eGui = this.getGui();\n    var wrapperHasFocus = activeEl === eGui;\n\n    if (!this.expandable || !wrapperHasFocus) {\n      return;\n    }\n\n    if (e.keyCode === KeyCode.ENTER) {\n      var column = this.getColumn();\n      var newExpandedValue = !column.isExpanded();\n      this.columnModel.setColumnGroupOpened(column.getOriginalColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.onTabKeyDown = function () {};\n\n  HeaderGroupWrapperComp.prototype.setupExpandable = function () {\n    var column = this.getColumn();\n    var originalColumnGroup = column.getOriginalColumnGroup();\n    this.refreshExpanded();\n    this.addManagedListener(originalColumnGroup, OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED, this.refreshExpanded.bind(this));\n    this.addManagedListener(originalColumnGroup, OriginalColumnGroup.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));\n  };\n\n  HeaderGroupWrapperComp.prototype.refreshExpanded = function () {\n    var column = this.getColumn();\n    var eGui = this.getGui();\n    var expandable = column.isExpandable();\n    var expanded = column.isExpanded();\n    this.expandable = expandable;\n\n    if (!expandable) {\n      eGui.removeAttribute('aria-expanded');\n    } else {\n      setAriaExpanded(eGui, expanded);\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.setupMovingCss = function () {\n    var _this = this;\n\n    var originalColumnGroup = this.column.getOriginalColumnGroup();\n    var leafColumns = originalColumnGroup.getLeafColumns();\n    leafColumns.forEach(function (col) {\n      _this.addManagedListener(col, Column.EVENT_MOVING_CHANGED, _this.onColumnMovingChanged.bind(_this));\n    });\n    this.onColumnMovingChanged();\n  };\n\n  HeaderGroupWrapperComp.prototype.getComponentHolder = function () {\n    return this.column.getColGroupDef();\n  };\n\n  HeaderGroupWrapperComp.prototype.getTooltipParams = function () {\n    var res = _super.prototype.getTooltipParams.call(this);\n\n    res.location = 'headerGroup'; // this is wrong, but leaving it as i don't want to change code,\n    // but the ColumnGroup does not have a ColDef or a Column (although it does have GroupDef and ColumnGroup)\n\n    res.colDef = this.getComponentHolder();\n    res.column = this.getColumn();\n    return res;\n  };\n\n  HeaderGroupWrapperComp.prototype.setupTooltip = function () {\n    var colGroupDef = this.getComponentHolder();\n    var tooltipText = colGroupDef && colGroupDef.headerTooltip;\n\n    if (tooltipText != null) {\n      this.setTooltip(tooltipText);\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.onColumnMovingChanged = function () {\n    // this function adds or removes the moving css, based on if the col is moving.\n    // this is what makes the header go dark when it is been moved (gives impression to\n    // user that the column was picked up).\n    addOrRemoveCssClass(this.getGui(), 'ag-header-cell-moving', this.column.isMoving());\n  };\n\n  HeaderGroupWrapperComp.prototype.addAttributes = function () {\n    this.getGui().setAttribute(\"col-id\", this.column.getUniqueId());\n  };\n\n  HeaderGroupWrapperComp.prototype.appendHeaderGroupComp = function (displayName) {\n    var _this = this;\n\n    var params = {\n      displayName: displayName,\n      columnGroup: this.column,\n      setExpanded: function (expanded) {\n        _this.columnModel.setColumnGroupOpened(_this.column.getOriginalColumnGroup(), expanded, \"gridInitializing\");\n      },\n      api: this.gridApi,\n      columnApi: this.columnApi,\n      context: this.gridOptionsWrapper.getContext()\n    };\n\n    if (!displayName) {\n      var columnGroup = this.column;\n      var leafCols = columnGroup.getLeafColumns(); // find the top most column group that represents the same columns. so if we are dragging a group, we also\n      // want to visually show the parent groups dragging for the same column set. for example imaging 5 levels\n      // of grouping, with each group only containing the next group, and the last group containing three columns,\n      // then when you move any group (even the lowest level group) you are in-fact moving all the groups, as all\n      // the groups represent the same column set.\n\n      while (columnGroup.getParent() && columnGroup.getParent().getLeafColumns().length === leafCols.length) {\n        columnGroup = columnGroup.getParent();\n      }\n\n      var colGroupDef = columnGroup.getColGroupDef();\n\n      if (colGroupDef) {\n        displayName = colGroupDef.headerName;\n      }\n\n      if (!displayName) {\n        displayName = leafCols ? this.columnModel.getDisplayNameForColumn(leafCols[0], 'header', true) : '';\n      }\n    }\n\n    var callback = this.afterHeaderCompCreated.bind(this, displayName);\n    this.userComponentFactory.newHeaderGroupComponent(params).then(callback);\n  };\n\n  HeaderGroupWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerGroupComp) {\n    var _this = this;\n\n    this.getGui().appendChild(headerGroupComp.getGui());\n    this.addDestroyFunc(function () {\n      _this.getContext().destroyBean(headerGroupComp);\n    });\n    this.setupMove(headerGroupComp.getGui(), displayName);\n  };\n\n  HeaderGroupWrapperComp.prototype.addClasses = function () {\n    // having different classes below allows the style to not have a bottom border\n    // on the group header, if no group is specified\n    // columnGroup.getColGroupDef\n    var style = this.column.isPadding() ? 'no' : 'with';\n    this.addCssClass(\"ag-header-group-cell-\" + style + \"-group\");\n  };\n\n  HeaderGroupWrapperComp.prototype.setupMove = function (eHeaderGroup, displayName) {\n    var _this = this;\n\n    if (!eHeaderGroup) {\n      return;\n    }\n\n    if (this.isSuppressMoving()) {\n      return;\n    }\n\n    var allLeafColumns = this.column.getOriginalColumnGroup().getLeafColumns();\n    var dragSource = {\n      type: DragSourceType.HeaderCell,\n      eElement: eHeaderGroup,\n      defaultIconName: DragAndDropService.ICON_HIDE,\n      dragItemName: displayName,\n      // we add in the original group leaf columns, so we move both visible and non-visible items\n      getDragItem: this.getDragItemForGroup.bind(this),\n      onDragStarted: function () {\n        return allLeafColumns.forEach(function (col) {\n          return col.setMoving(true, \"uiColumnDragged\");\n        });\n      },\n      onDragStopped: function () {\n        return allLeafColumns.forEach(function (col) {\n          return col.setMoving(false, \"uiColumnDragged\");\n        });\n      }\n    };\n    this.dragAndDropService.addDragSource(dragSource, true);\n    this.addDestroyFunc(function () {\n      return _this.dragAndDropService.removeDragSource(dragSource);\n    });\n  }; // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n  // and in the order they are currently in the screen.\n\n\n  HeaderGroupWrapperComp.prototype.getDragItemForGroup = function () {\n    var allColumnsOriginalOrder = this.column.getOriginalColumnGroup().getLeafColumns(); // capture visible state, used when re-entering grid to dictate which columns should be visible\n\n    var visibleState = {};\n    allColumnsOriginalOrder.forEach(function (column) {\n      return visibleState[column.getId()] = column.isVisible();\n    });\n    var allColumnsCurrentOrder = [];\n    this.columnModel.getAllDisplayedColumns().forEach(function (column) {\n      if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n        allColumnsCurrentOrder.push(column);\n        removeFromArray(allColumnsOriginalOrder, column);\n      }\n    }); // we are left with non-visible columns, stick these in at the end\n\n    allColumnsOriginalOrder.forEach(function (column) {\n      return allColumnsCurrentOrder.push(column);\n    }); // create and return dragItem\n\n    return {\n      columns: allColumnsCurrentOrder,\n      visibleState: visibleState\n    };\n  };\n\n  HeaderGroupWrapperComp.prototype.isSuppressMoving = function () {\n    // if any child is fixed, then don't allow moving\n    var childSuppressesMoving = false;\n    this.column.getLeafColumns().forEach(function (column) {\n      if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n        childSuppressesMoving = true;\n      }\n    });\n    var result = childSuppressesMoving || this.gridOptionsWrapper.isSuppressMovableColumns();\n    return result;\n  };\n\n  HeaderGroupWrapperComp.prototype.setupWidth = function () {\n    // we need to listen to changes in child columns, as they impact our width\n    this.addListenersToChildrenColumns(); // the children belonging to this group can change, so we need to add and remove listeners as they change\n\n    this.addManagedListener(this.column, ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this));\n    this.onWidthChanged(); // the child listeners are not tied to this components life-cycle, as children can get added and removed\n    // to the group - hence they are on a different life-cycle. so we must make sure the existing children\n    // listeners are removed when we finally get destroyed\n\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n  };\n\n  HeaderGroupWrapperComp.prototype.onDisplayedChildrenChanged = function () {\n    this.addListenersToChildrenColumns();\n    this.onWidthChanged();\n  };\n\n  HeaderGroupWrapperComp.prototype.addListenersToChildrenColumns = function () {\n    var _this = this; // first destroy any old listeners\n\n\n    this.removeListenersOnChildrenColumns(); // now add new listeners to the new set of children\n\n    var widthChangedListener = this.onWidthChanged.bind(this);\n    this.column.getLeafColumns().forEach(function (column) {\n      column.addEventListener(Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n      column.addEventListener(Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n\n      _this.removeChildListenersFuncs.push(function () {\n        column.removeEventListener(Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n        column.removeEventListener(Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n      });\n    });\n  };\n\n  HeaderGroupWrapperComp.prototype.removeListenersOnChildrenColumns = function () {\n    this.removeChildListenersFuncs.forEach(function (func) {\n      return func();\n    });\n    this.removeChildListenersFuncs = [];\n  };\n\n  HeaderGroupWrapperComp.prototype.onWidthChanged = function () {\n    this.getGui().style.width = this.column.getActualWidth() + 'px';\n  };\n\n  HeaderGroupWrapperComp.prototype.setupResize = function () {\n    var _this = this;\n\n    this.eHeaderCellResize = this.getRefElement('agResize');\n\n    if (!this.column.isResizable()) {\n      removeFromParent(this.eHeaderCellResize);\n      return;\n    }\n\n    var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n      eResizeBar: this.eHeaderCellResize,\n      onResizeStart: this.onResizeStart.bind(this),\n      onResizing: this.onResizing.bind(this, false),\n      onResizeEnd: this.onResizing.bind(this, true)\n    });\n    this.addDestroyFunc(finishedWithResizeFunc);\n\n    if (!this.gridOptionsWrapper.isSuppressAutoSize()) {\n      var skipHeaderOnAutoSize_1 = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();\n      this.eHeaderCellResize.addEventListener('dblclick', function (event) {\n        // get list of all the column keys we are responsible for\n        var keys = [];\n\n        _this.column.getDisplayedLeafColumns().forEach(function (column) {\n          // not all cols in the group may be participating with auto-resize\n          if (!column.getColDef().suppressAutoSize) {\n            keys.push(column.getColId());\n          }\n        });\n\n        if (keys.length > 0) {\n          _this.columnModel.autoSizeColumns(keys, skipHeaderOnAutoSize_1, \"uiColumnResized\");\n        }\n      });\n    }\n  };\n\n  HeaderGroupWrapperComp.prototype.onResizeStart = function (shiftKey) {\n    var _this = this;\n\n    var leafCols = this.column.getDisplayedLeafColumns();\n    this.resizeCols = leafCols.filter(function (col) {\n      return col.isResizable();\n    });\n    this.resizeStartWidth = 0;\n    this.resizeCols.forEach(function (col) {\n      return _this.resizeStartWidth += col.getActualWidth();\n    });\n    this.resizeRatios = [];\n    this.resizeCols.forEach(function (col) {\n      return _this.resizeRatios.push(col.getActualWidth() / _this.resizeStartWidth);\n    });\n    var takeFromGroup = null;\n\n    if (shiftKey) {\n      takeFromGroup = this.columnModel.getDisplayedGroupAfter(this.column);\n    }\n\n    if (takeFromGroup) {\n      var takeFromLeafCols = takeFromGroup.getDisplayedLeafColumns();\n      this.resizeTakeFromCols = takeFromLeafCols.filter(function (col) {\n        return col.isResizable();\n      });\n      this.resizeTakeFromStartWidth = 0;\n      this.resizeTakeFromCols.forEach(function (col) {\n        return _this.resizeTakeFromStartWidth += col.getActualWidth();\n      });\n      this.resizeTakeFromRatios = [];\n      this.resizeTakeFromCols.forEach(function (col) {\n        return _this.resizeTakeFromRatios.push(col.getActualWidth() / _this.resizeTakeFromStartWidth);\n      });\n    } else {\n      this.resizeTakeFromCols = null;\n      this.resizeTakeFromStartWidth = null;\n      this.resizeTakeFromRatios = null;\n    }\n\n    addCssClass(this.getGui(), 'ag-column-resizing');\n  };\n\n  HeaderGroupWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n    var resizeSets = [];\n    var resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n    resizeSets.push({\n      columns: this.resizeCols,\n      ratios: this.resizeRatios,\n      width: this.resizeStartWidth + resizeAmountNormalised\n    });\n\n    if (this.resizeTakeFromCols) {\n      resizeSets.push({\n        columns: this.resizeTakeFromCols,\n        ratios: this.resizeTakeFromRatios,\n        width: this.resizeTakeFromStartWidth - resizeAmountNormalised\n      });\n    }\n\n    this.columnModel.resizeColumnSets(resizeSets, finished, 'uiColumnDragged');\n\n    if (finished) {\n      removeCssClass(this.getGui(), 'ag-column-resizing');\n    }\n  }; // optionally inverts the drag, depending on pinned and RTL\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n\n\n  HeaderGroupWrapperComp.prototype.normaliseDragChange = function (dragChange) {\n    var result = dragChange;\n\n    if (this.gridOptionsWrapper.isEnableRtl()) {\n      // for RTL, dragging left makes the col bigger, except when pinning left\n      if (this.pinned !== Constants.PINNED_LEFT) {\n        result *= -1;\n      }\n    } else if (this.pinned === Constants.PINNED_RIGHT) {\n      // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n      result *= -1;\n    }\n\n    return result;\n  };\n\n  HeaderGroupWrapperComp.TEMPLATE = \"<div class=\\\"ag-header-group-cell\\\" role=\\\"columnheader\\\" tabindex=\\\"-1\\\">\\n            <div ref=\\\"agResize\\\" class=\\\"ag-header-cell-resize\\\" role=\\\"presentation\\\"></div>\\n        </div>\";\n\n  __decorate([Autowired('columnModel')], HeaderGroupWrapperComp.prototype, \"columnModel\", void 0);\n\n  __decorate([Autowired('horizontalResizeService')], HeaderGroupWrapperComp.prototype, \"horizontalResizeService\", void 0);\n\n  __decorate([Autowired('dragAndDropService')], HeaderGroupWrapperComp.prototype, \"dragAndDropService\", void 0);\n\n  __decorate([Autowired('userComponentFactory')], HeaderGroupWrapperComp.prototype, \"userComponentFactory\", void 0);\n\n  __decorate([Autowired('beans')], HeaderGroupWrapperComp.prototype, \"beans\", void 0);\n\n  __decorate([Autowired('gridApi')], HeaderGroupWrapperComp.prototype, \"gridApi\", void 0);\n\n  __decorate([Autowired('columnApi')], HeaderGroupWrapperComp.prototype, \"columnApi\", void 0);\n\n  __decorate([PostConstruct], HeaderGroupWrapperComp.prototype, \"postConstruct\", null);\n\n  return HeaderGroupWrapperComp;\n}(AbstractHeaderWrapper);\n\nexport { HeaderGroupWrapperComp };","map":{"version":3,"sources":["/Users/mphelps/react-app/TasQDashboard-main/node_modules/@ag-grid-community/core/dist/es6/headerRendering/headerGroup/headerGroupWrapperComp.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Column","ColumnGroup","Constants","Autowired","PostConstruct","CssClassApplier","DragAndDropService","DragSourceType","SetLeftFeature","HoverFeature","AbstractHeaderWrapper","OriginalColumnGroup","setAriaExpanded","removeFromArray","removeFromParent","addCssClass","removeCssClass","addOrRemoveCssClass","KeyCode","ManagedFocusFeature","HeaderGroupWrapperComp","_super","columnGroup","pinned","_this","call","TEMPLATE","removeChildListenersFuncs","column","postConstruct","addHeaderClassesFromColDef","getComponentHolder","getGui","gridOptionsWrapper","displayName","columnModel","getDisplayNameForColumnGroup","appendHeaderGroupComp","setupResize","addClasses","setupWidth","addAttributes","setupMovingCss","setupTooltip","setupExpandable","createManagedBean","getOriginalColumnGroup","getLeafColumns","beans","getFocusableElement","shouldStopEventPropagation","bind","onTabKeyDown","handleKeyDown","onFocusIn","e","contains","relatedTarget","headerRow","getParentComponent","focusService","setFocusedHeader","getRowIndex","getColumn","activeEl","document","activeElement","eGui","wrapperHasFocus","expandable","keyCode","ENTER","newExpandedValue","isExpanded","setColumnGroupOpened","originalColumnGroup","refreshExpanded","addManagedListener","EVENT_EXPANDABLE_CHANGED","EVENT_EXPANDED_CHANGED","isExpandable","expanded","removeAttribute","leafColumns","forEach","col","EVENT_MOVING_CHANGED","onColumnMovingChanged","getColGroupDef","getTooltipParams","res","location","colDef","colGroupDef","tooltipText","headerTooltip","setTooltip","isMoving","setAttribute","getUniqueId","params","setExpanded","api","gridApi","columnApi","context","getContext","leafCols","getParent","headerName","getDisplayNameForColumn","callback","afterHeaderCompCreated","userComponentFactory","newHeaderGroupComponent","then","headerGroupComp","appendChild","addDestroyFunc","destroyBean","setupMove","style","isPadding","eHeaderGroup","isSuppressMoving","allLeafColumns","dragSource","type","HeaderCell","eElement","defaultIconName","ICON_HIDE","dragItemName","getDragItem","getDragItemForGroup","onDragStarted","setMoving","onDragStopped","dragAndDropService","addDragSource","removeDragSource","allColumnsOriginalOrder","visibleState","getId","isVisible","allColumnsCurrentOrder","getAllDisplayedColumns","indexOf","push","columns","childSuppressesMoving","getColDef","suppressMovable","lockPosition","result","isSuppressMovableColumns","addListenersToChildrenColumns","EVENT_DISPLAYED_CHILDREN_CHANGED","onDisplayedChildrenChanged","onWidthChanged","removeListenersOnChildrenColumns","widthChangedListener","addEventListener","EVENT_WIDTH_CHANGED","EVENT_VISIBLE_CHANGED","removeEventListener","func","width","getActualWidth","eHeaderCellResize","getRefElement","isResizable","finishedWithResizeFunc","horizontalResizeService","addResizeBar","eResizeBar","onResizeStart","onResizing","onResizeEnd","isSuppressAutoSize","skipHeaderOnAutoSize_1","isSkipHeaderOnAutoSize","event","keys","getDisplayedLeafColumns","suppressAutoSize","getColId","autoSizeColumns","shiftKey","resizeCols","filter","resizeStartWidth","resizeRatios","takeFromGroup","getDisplayedGroupAfter","takeFromLeafCols","resizeTakeFromCols","resizeTakeFromStartWidth","resizeTakeFromRatios","finished","resizeAmount","resizeSets","resizeAmountNormalised","normaliseDragChange","ratios","resizeColumnSets","dragChange","isEnableRtl","PINNED_LEFT","PINNED_RIGHT"],"mappings":"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","sourcesContent":["/**\n * @ag-grid-community/core - Advanced Data Grid / Data Table supporting Javascript / React / AngularJS / Web Components\n * @version v26.0.0\n * @link http://www.ag-grid.com/\n * @license MIT\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Column } from \"../../entities/column\";\nimport { ColumnGroup } from \"../../entities/columnGroup\";\nimport { Constants } from \"../../constants/constants\";\nimport { Autowired, PostConstruct } from \"../../context/context\";\nimport { CssClassApplier } from \"../cssClassApplier\";\nimport { DragAndDropService, DragSourceType } from \"../../dragAndDrop/dragAndDropService\";\nimport { SetLeftFeature } from \"../../rendering/features/setLeftFeature\";\nimport { HoverFeature } from \"../hoverFeature\";\nimport { AbstractHeaderWrapper } from \"../header/abstractHeaderWrapper\";\nimport { OriginalColumnGroup } from \"../../entities/originalColumnGroup\";\nimport { setAriaExpanded } from \"../../utils/aria\";\nimport { removeFromArray } from \"../../utils/array\";\nimport { removeFromParent, addCssClass, removeCssClass, addOrRemoveCssClass } from \"../../utils/dom\";\nimport { KeyCode } from '../../constants/keyCode';\nimport { ManagedFocusFeature } from \"../../widgets/managedFocusFeature\";\nvar HeaderGroupWrapperComp = /** @class */ (function (_super) {\n    __extends(HeaderGroupWrapperComp, _super);\n    function HeaderGroupWrapperComp(columnGroup, pinned) {\n        var _this = _super.call(this, HeaderGroupWrapperComp.TEMPLATE) || this;\n        // the children can change, we keep destroy functions related to listening to the children here\n        _this.removeChildListenersFuncs = [];\n        _this.column = columnGroup;\n        _this.pinned = pinned;\n        return _this;\n    }\n    HeaderGroupWrapperComp.prototype.postConstruct = function () {\n        CssClassApplier.addHeaderClassesFromColDef(this.getComponentHolder(), this.getGui(), this.gridOptionsWrapper, null, this.column);\n        var displayName = this.columnModel.getDisplayNameForColumnGroup(this.column, 'header');\n        this.appendHeaderGroupComp(displayName);\n        this.setupResize();\n        this.addClasses();\n        this.setupWidth();\n        this.addAttributes();\n        this.setupMovingCss();\n        this.setupTooltip();\n        this.setupExpandable();\n        this.createManagedBean(new HoverFeature(this.column.getOriginalColumnGroup().getLeafColumns(), this.getGui()));\n        this.createManagedBean(new SetLeftFeature(this.column, this.getGui(), this.beans));\n        this.createManagedBean(new ManagedFocusFeature(this.getFocusableElement(), {\n            shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\n            onTabKeyDown: this.onTabKeyDown.bind(this),\n            handleKeyDown: this.handleKeyDown.bind(this),\n            onFocusIn: this.onFocusIn.bind(this)\n        }));\n    };\n    HeaderGroupWrapperComp.prototype.onFocusIn = function (e) {\n        if (!this.getGui().contains(e.relatedTarget)) {\n            var headerRow = this.getParentComponent();\n            this.beans.focusService.setFocusedHeader(headerRow.getRowIndex(), this.getColumn());\n        }\n    };\n    HeaderGroupWrapperComp.prototype.handleKeyDown = function (e) {\n        var activeEl = document.activeElement;\n        var eGui = this.getGui();\n        var wrapperHasFocus = activeEl === eGui;\n        if (!this.expandable || !wrapperHasFocus) {\n            return;\n        }\n        if (e.keyCode === KeyCode.ENTER) {\n            var column = this.getColumn();\n            var newExpandedValue = !column.isExpanded();\n            this.columnModel.setColumnGroupOpened(column.getOriginalColumnGroup(), newExpandedValue, \"uiColumnExpanded\");\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onTabKeyDown = function () { };\n    HeaderGroupWrapperComp.prototype.setupExpandable = function () {\n        var column = this.getColumn();\n        var originalColumnGroup = column.getOriginalColumnGroup();\n        this.refreshExpanded();\n        this.addManagedListener(originalColumnGroup, OriginalColumnGroup.EVENT_EXPANDABLE_CHANGED, this.refreshExpanded.bind(this));\n        this.addManagedListener(originalColumnGroup, OriginalColumnGroup.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));\n    };\n    HeaderGroupWrapperComp.prototype.refreshExpanded = function () {\n        var column = this.getColumn();\n        var eGui = this.getGui();\n        var expandable = column.isExpandable();\n        var expanded = column.isExpanded();\n        this.expandable = expandable;\n        if (!expandable) {\n            eGui.removeAttribute('aria-expanded');\n        }\n        else {\n            setAriaExpanded(eGui, expanded);\n        }\n    };\n    HeaderGroupWrapperComp.prototype.setupMovingCss = function () {\n        var _this = this;\n        var originalColumnGroup = this.column.getOriginalColumnGroup();\n        var leafColumns = originalColumnGroup.getLeafColumns();\n        leafColumns.forEach(function (col) {\n            _this.addManagedListener(col, Column.EVENT_MOVING_CHANGED, _this.onColumnMovingChanged.bind(_this));\n        });\n        this.onColumnMovingChanged();\n    };\n    HeaderGroupWrapperComp.prototype.getComponentHolder = function () {\n        return this.column.getColGroupDef();\n    };\n    HeaderGroupWrapperComp.prototype.getTooltipParams = function () {\n        var res = _super.prototype.getTooltipParams.call(this);\n        res.location = 'headerGroup';\n        // this is wrong, but leaving it as i don't want to change code,\n        // but the ColumnGroup does not have a ColDef or a Column (although it does have GroupDef and ColumnGroup)\n        res.colDef = this.getComponentHolder();\n        res.column = this.getColumn();\n        return res;\n    };\n    HeaderGroupWrapperComp.prototype.setupTooltip = function () {\n        var colGroupDef = this.getComponentHolder();\n        var tooltipText = colGroupDef && colGroupDef.headerTooltip;\n        if (tooltipText != null) {\n            this.setTooltip(tooltipText);\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onColumnMovingChanged = function () {\n        // this function adds or removes the moving css, based on if the col is moving.\n        // this is what makes the header go dark when it is been moved (gives impression to\n        // user that the column was picked up).\n        addOrRemoveCssClass(this.getGui(), 'ag-header-cell-moving', this.column.isMoving());\n    };\n    HeaderGroupWrapperComp.prototype.addAttributes = function () {\n        this.getGui().setAttribute(\"col-id\", this.column.getUniqueId());\n    };\n    HeaderGroupWrapperComp.prototype.appendHeaderGroupComp = function (displayName) {\n        var _this = this;\n        var params = {\n            displayName: displayName,\n            columnGroup: this.column,\n            setExpanded: function (expanded) {\n                _this.columnModel.setColumnGroupOpened(_this.column.getOriginalColumnGroup(), expanded, \"gridInitializing\");\n            },\n            api: this.gridApi,\n            columnApi: this.columnApi,\n            context: this.gridOptionsWrapper.getContext()\n        };\n        if (!displayName) {\n            var columnGroup = this.column;\n            var leafCols = columnGroup.getLeafColumns();\n            // find the top most column group that represents the same columns. so if we are dragging a group, we also\n            // want to visually show the parent groups dragging for the same column set. for example imaging 5 levels\n            // of grouping, with each group only containing the next group, and the last group containing three columns,\n            // then when you move any group (even the lowest level group) you are in-fact moving all the groups, as all\n            // the groups represent the same column set.\n            while (columnGroup.getParent() && columnGroup.getParent().getLeafColumns().length === leafCols.length) {\n                columnGroup = columnGroup.getParent();\n            }\n            var colGroupDef = columnGroup.getColGroupDef();\n            if (colGroupDef) {\n                displayName = colGroupDef.headerName;\n            }\n            if (!displayName) {\n                displayName = leafCols ? this.columnModel.getDisplayNameForColumn(leafCols[0], 'header', true) : '';\n            }\n        }\n        var callback = this.afterHeaderCompCreated.bind(this, displayName);\n        this.userComponentFactory.newHeaderGroupComponent(params).then(callback);\n    };\n    HeaderGroupWrapperComp.prototype.afterHeaderCompCreated = function (displayName, headerGroupComp) {\n        var _this = this;\n        this.getGui().appendChild(headerGroupComp.getGui());\n        this.addDestroyFunc(function () {\n            _this.getContext().destroyBean(headerGroupComp);\n        });\n        this.setupMove(headerGroupComp.getGui(), displayName);\n    };\n    HeaderGroupWrapperComp.prototype.addClasses = function () {\n        // having different classes below allows the style to not have a bottom border\n        // on the group header, if no group is specified\n        // columnGroup.getColGroupDef\n        var style = this.column.isPadding() ? 'no' : 'with';\n        this.addCssClass(\"ag-header-group-cell-\" + style + \"-group\");\n    };\n    HeaderGroupWrapperComp.prototype.setupMove = function (eHeaderGroup, displayName) {\n        var _this = this;\n        if (!eHeaderGroup) {\n            return;\n        }\n        if (this.isSuppressMoving()) {\n            return;\n        }\n        var allLeafColumns = this.column.getOriginalColumnGroup().getLeafColumns();\n        var dragSource = {\n            type: DragSourceType.HeaderCell,\n            eElement: eHeaderGroup,\n            defaultIconName: DragAndDropService.ICON_HIDE,\n            dragItemName: displayName,\n            // we add in the original group leaf columns, so we move both visible and non-visible items\n            getDragItem: this.getDragItemForGroup.bind(this),\n            onDragStarted: function () { return allLeafColumns.forEach(function (col) { return col.setMoving(true, \"uiColumnDragged\"); }); },\n            onDragStopped: function () { return allLeafColumns.forEach(function (col) { return col.setMoving(false, \"uiColumnDragged\"); }); }\n        };\n        this.dragAndDropService.addDragSource(dragSource, true);\n        this.addDestroyFunc(function () { return _this.dragAndDropService.removeDragSource(dragSource); });\n    };\n    // when moving the columns, we want to move all the columns (contained within the DragItem) in this group in one go,\n    // and in the order they are currently in the screen.\n    HeaderGroupWrapperComp.prototype.getDragItemForGroup = function () {\n        var allColumnsOriginalOrder = this.column.getOriginalColumnGroup().getLeafColumns();\n        // capture visible state, used when re-entering grid to dictate which columns should be visible\n        var visibleState = {};\n        allColumnsOriginalOrder.forEach(function (column) { return visibleState[column.getId()] = column.isVisible(); });\n        var allColumnsCurrentOrder = [];\n        this.columnModel.getAllDisplayedColumns().forEach(function (column) {\n            if (allColumnsOriginalOrder.indexOf(column) >= 0) {\n                allColumnsCurrentOrder.push(column);\n                removeFromArray(allColumnsOriginalOrder, column);\n            }\n        });\n        // we are left with non-visible columns, stick these in at the end\n        allColumnsOriginalOrder.forEach(function (column) { return allColumnsCurrentOrder.push(column); });\n        // create and return dragItem\n        return {\n            columns: allColumnsCurrentOrder,\n            visibleState: visibleState\n        };\n    };\n    HeaderGroupWrapperComp.prototype.isSuppressMoving = function () {\n        // if any child is fixed, then don't allow moving\n        var childSuppressesMoving = false;\n        this.column.getLeafColumns().forEach(function (column) {\n            if (column.getColDef().suppressMovable || column.getColDef().lockPosition) {\n                childSuppressesMoving = true;\n            }\n        });\n        var result = childSuppressesMoving || this.gridOptionsWrapper.isSuppressMovableColumns();\n        return result;\n    };\n    HeaderGroupWrapperComp.prototype.setupWidth = function () {\n        // we need to listen to changes in child columns, as they impact our width\n        this.addListenersToChildrenColumns();\n        // the children belonging to this group can change, so we need to add and remove listeners as they change\n        this.addManagedListener(this.column, ColumnGroup.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this));\n        this.onWidthChanged();\n        // the child listeners are not tied to this components life-cycle, as children can get added and removed\n        // to the group - hence they are on a different life-cycle. so we must make sure the existing children\n        // listeners are removed when we finally get destroyed\n        this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\n    };\n    HeaderGroupWrapperComp.prototype.onDisplayedChildrenChanged = function () {\n        this.addListenersToChildrenColumns();\n        this.onWidthChanged();\n    };\n    HeaderGroupWrapperComp.prototype.addListenersToChildrenColumns = function () {\n        var _this = this;\n        // first destroy any old listeners\n        this.removeListenersOnChildrenColumns();\n        // now add new listeners to the new set of children\n        var widthChangedListener = this.onWidthChanged.bind(this);\n        this.column.getLeafColumns().forEach(function (column) {\n            column.addEventListener(Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n            column.addEventListener(Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n            _this.removeChildListenersFuncs.push(function () {\n                column.removeEventListener(Column.EVENT_WIDTH_CHANGED, widthChangedListener);\n                column.removeEventListener(Column.EVENT_VISIBLE_CHANGED, widthChangedListener);\n            });\n        });\n    };\n    HeaderGroupWrapperComp.prototype.removeListenersOnChildrenColumns = function () {\n        this.removeChildListenersFuncs.forEach(function (func) { return func(); });\n        this.removeChildListenersFuncs = [];\n    };\n    HeaderGroupWrapperComp.prototype.onWidthChanged = function () {\n        this.getGui().style.width = this.column.getActualWidth() + 'px';\n    };\n    HeaderGroupWrapperComp.prototype.setupResize = function () {\n        var _this = this;\n        this.eHeaderCellResize = this.getRefElement('agResize');\n        if (!this.column.isResizable()) {\n            removeFromParent(this.eHeaderCellResize);\n            return;\n        }\n        var finishedWithResizeFunc = this.horizontalResizeService.addResizeBar({\n            eResizeBar: this.eHeaderCellResize,\n            onResizeStart: this.onResizeStart.bind(this),\n            onResizing: this.onResizing.bind(this, false),\n            onResizeEnd: this.onResizing.bind(this, true)\n        });\n        this.addDestroyFunc(finishedWithResizeFunc);\n        if (!this.gridOptionsWrapper.isSuppressAutoSize()) {\n            var skipHeaderOnAutoSize_1 = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();\n            this.eHeaderCellResize.addEventListener('dblclick', function (event) {\n                // get list of all the column keys we are responsible for\n                var keys = [];\n                _this.column.getDisplayedLeafColumns().forEach(function (column) {\n                    // not all cols in the group may be participating with auto-resize\n                    if (!column.getColDef().suppressAutoSize) {\n                        keys.push(column.getColId());\n                    }\n                });\n                if (keys.length > 0) {\n                    _this.columnModel.autoSizeColumns(keys, skipHeaderOnAutoSize_1, \"uiColumnResized\");\n                }\n            });\n        }\n    };\n    HeaderGroupWrapperComp.prototype.onResizeStart = function (shiftKey) {\n        var _this = this;\n        var leafCols = this.column.getDisplayedLeafColumns();\n        this.resizeCols = leafCols.filter(function (col) { return col.isResizable(); });\n        this.resizeStartWidth = 0;\n        this.resizeCols.forEach(function (col) { return _this.resizeStartWidth += col.getActualWidth(); });\n        this.resizeRatios = [];\n        this.resizeCols.forEach(function (col) { return _this.resizeRatios.push(col.getActualWidth() / _this.resizeStartWidth); });\n        var takeFromGroup = null;\n        if (shiftKey) {\n            takeFromGroup = this.columnModel.getDisplayedGroupAfter(this.column);\n        }\n        if (takeFromGroup) {\n            var takeFromLeafCols = takeFromGroup.getDisplayedLeafColumns();\n            this.resizeTakeFromCols = takeFromLeafCols.filter(function (col) { return col.isResizable(); });\n            this.resizeTakeFromStartWidth = 0;\n            this.resizeTakeFromCols.forEach(function (col) { return _this.resizeTakeFromStartWidth += col.getActualWidth(); });\n            this.resizeTakeFromRatios = [];\n            this.resizeTakeFromCols.forEach(function (col) { return _this.resizeTakeFromRatios.push(col.getActualWidth() / _this.resizeTakeFromStartWidth); });\n        }\n        else {\n            this.resizeTakeFromCols = null;\n            this.resizeTakeFromStartWidth = null;\n            this.resizeTakeFromRatios = null;\n        }\n        addCssClass(this.getGui(), 'ag-column-resizing');\n    };\n    HeaderGroupWrapperComp.prototype.onResizing = function (finished, resizeAmount) {\n        var resizeSets = [];\n        var resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\n        resizeSets.push({\n            columns: this.resizeCols,\n            ratios: this.resizeRatios,\n            width: this.resizeStartWidth + resizeAmountNormalised\n        });\n        if (this.resizeTakeFromCols) {\n            resizeSets.push({\n                columns: this.resizeTakeFromCols,\n                ratios: this.resizeTakeFromRatios,\n                width: this.resizeTakeFromStartWidth - resizeAmountNormalised\n            });\n        }\n        this.columnModel.resizeColumnSets(resizeSets, finished, 'uiColumnDragged');\n        if (finished) {\n            removeCssClass(this.getGui(), 'ag-column-resizing');\n        }\n    };\n    // optionally inverts the drag, depending on pinned and RTL\n    // note - this method is duplicated in RenderedHeaderCell - should refactor out?\n    HeaderGroupWrapperComp.prototype.normaliseDragChange = function (dragChange) {\n        var result = dragChange;\n        if (this.gridOptionsWrapper.isEnableRtl()) {\n            // for RTL, dragging left makes the col bigger, except when pinning left\n            if (this.pinned !== Constants.PINNED_LEFT) {\n                result *= -1;\n            }\n        }\n        else if (this.pinned === Constants.PINNED_RIGHT) {\n            // for LTR (ie normal), dragging left makes the col smaller, except when pinning right\n            result *= -1;\n        }\n        return result;\n    };\n    HeaderGroupWrapperComp.TEMPLATE = \"<div class=\\\"ag-header-group-cell\\\" role=\\\"columnheader\\\" tabindex=\\\"-1\\\">\\n            <div ref=\\\"agResize\\\" class=\\\"ag-header-cell-resize\\\" role=\\\"presentation\\\"></div>\\n        </div>\";\n    __decorate([\n        Autowired('columnModel')\n    ], HeaderGroupWrapperComp.prototype, \"columnModel\", void 0);\n    __decorate([\n        Autowired('horizontalResizeService')\n    ], HeaderGroupWrapperComp.prototype, \"horizontalResizeService\", void 0);\n    __decorate([\n        Autowired('dragAndDropService')\n    ], HeaderGroupWrapperComp.prototype, \"dragAndDropService\", void 0);\n    __decorate([\n        Autowired('userComponentFactory')\n    ], HeaderGroupWrapperComp.prototype, \"userComponentFactory\", void 0);\n    __decorate([\n        Autowired('beans')\n    ], HeaderGroupWrapperComp.prototype, \"beans\", void 0);\n    __decorate([\n        Autowired('gridApi')\n    ], HeaderGroupWrapperComp.prototype, \"gridApi\", void 0);\n    __decorate([\n        Autowired('columnApi')\n    ], HeaderGroupWrapperComp.prototype, \"columnApi\", void 0);\n    __decorate([\n        PostConstruct\n    ], HeaderGroupWrapperComp.prototype, \"postConstruct\", null);\n    return HeaderGroupWrapperComp;\n}(AbstractHeaderWrapper));\nexport { HeaderGroupWrapperComp };\n"]},"metadata":{},"sourceType":"module"}