{"ast":null,"code":"export const evaluateGuess=async(code,guesses,guessCounter)=>{let feedback=\"\";let string_guess=\"\";let codeCopy=[];let guessesCopy=[];let stringCopy=\"\";for(let y=0;y<=4;y++){string_guess=string_guess+guesses[y];}//copies\nfor(let y=0;y<=4;y++){codeCopy[y]=code[y];}for(let y=0;y<=4;y++){guessesCopy[y]=guesses[y];}//----created copy of arays\nfor(let y=0;y<=4;y++){if(codeCopy[y]===guessesCopy[y]){codeCopy[y]=null;guessesCopy[y]='!';//order matters so have to set code to null and guesses to green\n}}for(let y=0;y<=4;y++){for(let i=0;i<=4;i++){if(guessesCopy[i]===codeCopy[y]){codeCopy[y]=null;//similiar to above, but indexes dont have to match + greens have already been filtered\nguessesCopy[i]='@';}}}console.log(guessesCopy);console.log(codeCopy);const is_word=fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+string_guess)//1\n.then(response=>response.json())//2\n.then(word=>{return word[0];//3\n});const a=await is_word;if(a===undefined){feedback=\"this is not a word\";}else{for(let i=0;i<=4;i++){if(guessesCopy[i]==='!'){feedback+=\"!\";}else if(guessesCopy[i]===\"@\"){//error becayse a is undefined\nfeedback+=\"@\";}else{feedback+=\"-\";}}//checks to see if they guessed the right word\nif(feedback==='!!!!!'){feedback=\"You Win!\";}else if(guessCounter===7){feedback=\"You Lose!\";}}return feedback;};","map":{"version":3,"names":["evaluateGuess","code","guesses","guessCounter","feedback","string_guess","codeCopy","guessesCopy","stringCopy","y","i","console","log","is_word","fetch","then","response","json","word","a","undefined"],"sources":["/Users/mphelps/react-app/Worldle_V2/src/evaluate_guess.js"],"sourcesContent":["export const evaluateGuess = async (code, guesses, guessCounter) => {\n  let feedback = \"\";\n  let string_guess =\"\"\n  let codeCopy = [];\n  let guessesCopy = [];\nlet stringCopy =\"\"\n\n\nfor (let y = 0; y <= 4; y++) {\n  string_guess=string_guess+guesses[y];\n}\n\n\n//copies\nfor (let y = 0; y <= 4; y++) {\n  codeCopy[y] =code[y];\n}\n\nfor (let y = 0; y <= 4; y++) {\n  guessesCopy[y] =guesses[y];\n}\n//----created copy of arays\n\nfor (let y = 0; y <= 4; y++) {\n  if(codeCopy[y] === guessesCopy[y]){\n    codeCopy[y] = null;\n    guessesCopy[y] ='!';   //order matters so have to set code to null and guesses to green\n  }\n}\n\nfor (let y = 0; y <= 4; y++) {\n    for (let i = 0; i <= 4; i++) {\n      if (guessesCopy[i] === codeCopy[y]){\n        codeCopy[y] = null;          //similiar to above, but indexes dont have to match + greens have already been filtered\n        guessesCopy[i] ='@';\n      }\n    }\n  }\n\n\n\n\nconsole.log(guessesCopy);\nconsole.log(codeCopy);\n\n\n\nconst is_word = fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+string_guess) //1\n  .then((response) => response.json()) //2\n  .then((word) => {\n    return word[0]; //3\n  });\n\n\n\n  const a = await is_word;\n  if (a === undefined){\n\n\n      feedback = \"this is not a word\"\n\n  }\n  else{\n\n\n  for (let i = 0; i <= 4; i++) {\n    if (guessesCopy[i] === '!') {\n      feedback += \"!\";\n    }\n    else if (guessesCopy[i] === \"@\") { //error becayse a is undefined\n      feedback += \"@\";\n    }\n    else{\n      feedback += \"-\";\n    }\n  }\n\n//checks to see if they guessed the right word\nif (feedback === '!!!!!'){\n  feedback = \"You Win!\"\n\n}\nelse if(guessCounter===7){\n  feedback = \"You Lose!\"\n}\n\n}\n\n\n  return feedback;\n\n\n\n\n\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}